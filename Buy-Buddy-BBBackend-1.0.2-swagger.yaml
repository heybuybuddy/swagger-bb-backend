openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: 'https://virtserver.swaggerhub.com/Buy-Buddy/BBBackend/1.0.2'
  - url: 'https://api-legacy.buybuddy.co/api/v1'
info:
  description: |
    # Introduction
    ## What is Buy Buddy Platform?
    Buy Buddy is a multi-purpose retail efficiency platform.

    ## Who is Buy Buddy Platform for?
    Buy Buddy platform is available for any retailers who are in search for a new way of optimizing their in store activities and offering a new and technological way of shopping to their customers.
    # Authentication
    The data of the users and its availability to the particular access groups carries significance, which is the main reason why authentication layer is required.
    Therefore, in order to perform certain actions, users are required to be authenticated to our platform services.
    Once the authentication layer identifies the user associated with requests to the platform API, the authorization layer uses information about the requesting user to determine if the request should be allowed.
    ## Artifacts
    ### Credentials
    The credentials artifact is a form of "username" and a matching "password" which identifies the user.
    It is required as the first step of authenticating to the platform.
    Submission of credentials to the platform will grant a passphrase in return for further interaction with the system.
    ### Passphrase
    This artifact provides an ability to grant access on the server.
    The passphrase is assigned after the initial submission of the user credentials.
    It has a long expiration duration of six months and it could be stored on a device, possibly using secure persistence mechanisms (i.e. keychain).
    A valid passphrase will be adequate to grant access to a user.
    ### JSON Web Token (RFC 7519)
    Contains user data signed off by the platform authority, which provides stateless authentication.
    In many circumstances, the payload of this artifact could be read by client application, but not mutated.
    In case of mutation, it will invalidate itself, since signature is no longer valid.
    It has a valid duration of 15 minutes, after the duration has passed, it will invalidate itself.
    #### Renewal
    The JSON Web Token (JWT) will be renewed automatically after its duration ends if a valid passphrase is available. In case of both the passphrase and JWT are unavailable the user will have to authenticate using their credentials once more and obtain a new passphrase and use it to retrieve a new JWT.
    # Authorization
    Authorization policies determine whether a user is allowed to perform a given action within the platform. This allows platform administrators to use the existing policies to control who has various access levels to the platform itself. Note that authorization is a separate step from authentication, which is more about determining the identity of who is taking the action.
    ## Authorization Management
    Managing authorization and permissions per user can be a difficult job when a lot of users are involved. Incorrect management of permissions can block users from accessing required sources or even worse grant access to unauthorized users to restricted areas and perform harmful operations. Therefore authorization management is an important job and should be handled cautiously. On our platform, authorization is managed through permissions sets and permission grants. By granting permission sets to certain users, they are enabled to perform certain actions allowed by the permission set. Users can be granted more than one permission set and permission sets may override each other.
    ### Permissions
    Together with authentication, permissions are used to determine whether a request from a certain user should be granted or denied access. Permissions specify exactly which resources or actions can be accessed by that particular user. A permission is the simplest element of authorization.
    #### Permission Sets
    Permission sets, to simply put, are a set of permissions that is used to grant additional access to one or more users. You can use permission sets to grant access. To deny access one would simply not grant that certain set of permissions.
    ### Retrieval
    Permissions are granted through permission set grants. Once granted they usually are available for certain periods of time. They can be set to be available after a certain date. The grant would have to be invalidated to revoke the access for that particular user.
    ### Policies
    Policies are definitions for the permissions. More specifically, permissions define which parts of the platform can be accessed via that permission while policies will define the action a user can perform after receiving the permission.
    ### Rate Limiting
    Rate limiting is necessary for controlling the rate and number of requests received from an external network. We apply rate limiting on our platform to prevent DoS attacks. Rate limiting is applied to each user separately. To describe more accurately, it is applied to each users access token.
    #Errors
    Buy Buddy API uses conventional HTTP response codes to indicate the success or failure of an API request. In general; Codes in the 2xx range indicate success. Codes in the 4xx range indicate an error that failed given the information provided (e.g., a required parameter was omitted, a charge failed, etc.). Codes in the 5xx range indicate an error with Stripe's servers (these are rare).
    <!-- ReDoc-Inject: <security-definitions> -->
  version: 1.0.2
  title: Buy Buddy Web Services
  contact:
    email: emir@buybuddy.co
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /user:
    post:
      tags:
        - post
        - user
      summary: create a user
      description: |
        By passing in the appropriate options, you create a user token to access the platform
      operationId: userCreate
      requestBody:
        description: source_user id and name and password and merchant_id and store_id and email
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_create'
      responses:
        '201':
          description: result of the item assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
  /user/sign_in:
    post:
      tags:
        - post
        - user
      summary: creates a json web token
      description: |
        By passing in the appropriate options, you create a authentication token to access the platform
      operationId: signIn
      requestBody:
        description: username and password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sign_in_body'
        required: true
      responses:
        '201':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passphrase'
        '400':
          description: bad input parameter
        '404':
          description: username or password not found
  /user/sign_in/token:
    post:
      tags:
        - post
        - user
      summary: creates a json web token
      description: |
        By passing in the appropriate options, you create a json web token to access the platform
      operationId: token
      requestBody:
        description: passphrase and user_id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sign_in_token_body'
        required: true
      responses:
        '201':
          description: result of the item assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: bad input parameter
  /user/third_party/sign_in:
    post:
      tags:
        - post
        - user
      summary: third party sign in
      description: |
        By passing in the appropriate options, you create a json web token to access the platform
      operationId: thirdpartysignin
      requestBody:
        description: passphrase and user_id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sign_in_third_party_body'
        required: true
      responses:
        '201':
          description: result of the sign in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartySignIn'
        '400':
          description: bad input parameter
        '404':
          description: not found
        '422':
          description: unprocessable entity
  /user/change_password:
    post:
      tags:
        - post
        - user
      summary: change password
      description: |
        you can change a user password.
      operationId: changeuserpassword
      parameters:
        - name: old_password
          in: header
          required: true
          explode: true
          schema:
            type: string
        - name: new_password
          in: header
          required: true
          explode: true
          schema:
            type: string
        - name: user_name
          in: header
          required: true
          explode: true
          schema:
            type: string
        - name: user_id
          in: header
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
        '400':
          description: bad input parameter
  /user/basket:
    get:
      tags:
        - get
        - user
        - basket
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBasket'
  /user/list:
    get:
      tags:
        - get
        - user
      summary: fetch user
      description: |
        By passing in the appropriate options, you fetch user
      operationId: userList
      parameters:
        - name: merchant_id
          in: query
          description: merchant identifier
          required: false
          schema:
            type: integer
        - name: store_id
          in: query
          description: store identifier
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserList'
        '400':
          description: bad input parameter
  '/user/{user_id}/user_name':
    get:
      tags:
        - user
        - get
      summary: fetch user name
      description: fetch user name
      parameters:
        - name: user_id
          in: path
          description: user identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserName'
    put:
      tags:
        - user
        - put
      summary: update user name
      description: update user name
      parameters:
        - name: user_id
          in: path
          description: user identifier
          required: true
          schema:
            type: string
      requestBody:
        description: result
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_name_update_body'
      responses:
        '201':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserName'
  '/user/{user_id}/email_address':
    get:
      tags:
        - user
        - get
      summary: fetch user email address
      description: fetch user email address
      parameters:
        - name: user_id
          in: path
          description: user identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEmail'
    put:
      tags:
        - user
        - put
      summary: fetch user name
      description: fetch user name
      parameters:
        - name: user_id
          in: path
          description: user identifier
          required: true
          schema:
            type: string
      requestBody:
        description: result
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_email_address_update_body'
      responses:
        '201':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEmail'
  '/user/{user_id}/phone_number':
    get:
      tags:
        - user
        - get
      summary: fetch user phone number
      description: fetch user phone number
      parameters:
        - name: user_id
          in: path
          description: user identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPhoneNumber'
    put:
      tags:
        - user
        - put
      summary: update user phone number
      description: update user phone number
      parameters:
        - name: user_id
          in: path
          description: user identifier
          required: true
          schema:
            type: string
      requestBody:
        description: result
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_phone_number_update_body'
      responses:
        '201':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPhoneNumber'
  '/user/{user_id}/personal_information':
    get:
      tags:
        - user
        - get
      summary: fetch user name
      description: fetch user name
      parameters:
        - name: user_id
          in: path
          description: user identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPersonalInformation'
    put:
      tags:
        - user
        - put
      summary: update user personal  information
      description: 'update user personal information.Updatable parameters are name, middle name, last name, title'
      parameters:
        - name: user_id
          in: path
          description: user identifier
          required: true
          schema:
            type: string
      requestBody:
        description: result
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_personal_information_update_body'
      responses:
        '201':
          description: updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPersonalInformation'
  '/user/{user_id}/merchant_assignment':
    get:
      tags:
        - user
        - get
      summary: fetch user name
      description: fetch user name
      parameters:
        - name: user_id
          in: path
          description: user identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMerchantAssignment'
    post:
      tags:
        - user
        - merchant assignment
        - post
      summary: create user merchant assignment
      description: create user merchant assignment
      parameters:
        - name: user_id
          in: path
          description: user identifier
          required: true
          schema:
            type: string
      requestBody:
        description: result
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_merchant_assignment_body'
      responses:
        '201':
          description: updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMerchantAssignment'
  '/user/merchant_assignment/:assignment_id/invalidation':
    post:
      tags:
        - user
        - post
      summary: invalidation for user merchant assignment
      description: invalidation for user merchant assignment
      requestBody:
        description: result
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_merchant_assignment_invalidation_body'
      responses:
        '201':
          description: updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMerchantAssignmentInvalidation'
  '/user/{user_id}/store_assignment':
    get:
      tags:
        - user
        - get
      summary: fetch user name
      description: fetch user name
      parameters:
        - name: user_id
          in: path
          description: user identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStoreAssignment'
    post:
      tags:
        - user
        - store_assignment assignment
        - post
      summary: create user merchant assignment
      description: create user merchant assignment
      parameters:
        - name: user_id
          in: path
          description: user identifier
          required: true
          schema:
            type: string
      requestBody:
        description: result
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_store_assignment_body'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStoreAssignment'
  '/user/{user_id}/device_information':
    post:
      tags:
        - post
        - user
      summary: stores information
      description: |
        By passing in the appropriate options, you can store the user's device information
      operationId: deviceInformation
      parameters:
        - name: user_id
          in: path
          description: user identifier the device belongs to.
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_3'
        required: true
      responses:
        '201':
          description: result of the device information assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDeviceInformation'
        '400':
          description: bad input parameter
  /user/should_process:
    get:
      tags:
        - get
        - user
      summary: interaction should process
      description: get information of the user should process of the interaction
      parameters:
        - name: device_identifier
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: event_id
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: result of the device information assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShouldProcess'
        '400':
          description: bad input parameter
  /location/country:
    get:
      tags:
        - get
        - location
      summary: fetches all countries
      description: |
        By passing in the appropriate options, you can fetch all countries
      operationId: country
      responses:
        '200':
          description: all countries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
  /location/country/region:
    get:
      tags:
        - get
        - location
      summary: fetches all regions associated with the country
      description: |
        By passing in the appropriate options, you can fetch all the regions
      operationId: region
      parameters:
        - name: country_id
          in: query
          description: country identifier the region belongs to.
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: all regions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
  /location/country/city:
    get:
      tags:
        - get
        - location
      summary: fetches all cities associated with the country
      description: |
        By passing in the appropriate options, you can fetch all the cities
      operationId: city
      parameters:
        - name: country_id
          in: query
          description: country identifier the city belongs to.
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: region_id
          in: query
          description: region identifier the city belongs to.
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: all regions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City'
  /location/country/city/store:
    get:
      tags:
        - get
        - location
      summary: fetches all stores
      description: |
        By passing in the appropriate options, you can fetch all the stores
      operationId: store
      parameters:
        - name: country_id
          in: query
          description: country identifier the city belongs to.
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: region_id
          in: query
          description: region identifier the city belongs to.
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: city_id
          in: query
          description: city identifier the city belongs to.
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: all stores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Store'
  /brand:
    get:
      tags:
        - get
        - brand
      summary: fetch brands
      description: |
        fetch all brands.
      operationId: brandget
      parameters:
        - name: merchant_id
          in: query
          description: merchant identifier the merchant belongs to.
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/UpdatableModel'
        '400':
          description: bad input parameter
    post:
      tags:
        - post
        - brand
      summary: Create a brand
      description: |
        Create a brand
      operationId: createbrand
      requestBody:
        description: name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_create_name'
        required: true
      responses:
        '201':
          description: result of the item assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatableModel'
  /category:
    post:
      tags:
        - post
        - category
      summary: Create a category
      description: |
        Create a category
      operationId: createcategory
      requestBody:
        description: name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_create_name'
        required: true
      responses:
        '201':
          description: result of the item assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: bad input parameter
    get:
      tags:
        - get
        - category
      summary: get categories list
      description: get all categories
      operationId: categorylist
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '400':
          description: bad input parameter
  /device:
    post:
      tags:
        - device
        - post
      summary: create device
      description: create device
      operationId: createDevice
      requestBody:
        description: create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
      responses:
        '201':
          description: result
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  inserted_at:
                    type: string
                    format: date-time
                  identifier:
                    type: string
                  device_type_id:
                    type: integer
                  qr_code:
                    type: string
                  updated_at:
                    type: string
                    format: date-time
    get:
      tags:
        - device
        - get
        - list
      summary: get all device
      description: get all device
      operationId: getDevice
      parameters:
        - name: device_type_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: merchant_assigment
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: boolean
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                    inserted_at:
                      type: string
                      format: date-time
                    identifier:
                      type: string
                    device_type_id:
                      type: integer
                    qr_code:
                      type: string
                    updated_at:
                      type: string
                      format: date-time
  /device_type:
    post:
      tags:
        - device type
        - post
      summary: create device type
      description: create device type
      operationId: updateDevice
      requestBody:
        description: create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device_Type'
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceType'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  /device_type/list:
    get:
      tags:
        - device type
        - list
      summary: get device type list
      description: get device type list
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      description: The type id.
                    inserted_at:
                      type: string
                      format: date-time
                    type:
                      type: string
                    updated_at:
                      type: string
                      format: date-time
  '/device/{device_id}/store':
    get:
      tags:
        - get
        - device
      summary: check device store assignment
      description: check device store assignment
      parameters:
        - name: device_id
          in: path
          description: device identifier
          required: true
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                properties:
                  device_id:
                    type: integer
                    description: The type id.
                  identifier:
                    type: string
                  device_type:
                    type: string
                  merchant_id:
                    type: integer
                  store_id:
                    type: integer
                  store_name:
                    type: string
                  merchant_assignment_id:
                    type: integer
                  assignment_id:
                    type: integer
                  inserted_at:
                    type: string
                    format: date-time
  /device/alarm_action:
    post:
      tags:
        - post
        - device
        - alarm action
      summary: create alarm action
      description: create alarm action
      requestBody:
        description: Item and user to assign
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/device_alarm_action'
      responses:
        '201':
          description: result
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                  inserted_at:
                    type: string
                    format: date-time
                  alarm_history_id:
                    type: integer
                  user_id:
                    type: integer
                  action_type_id:
                    type: integer
  /device/alarm_history:
    get:
      tags:
        - get
        - device
      summary: fetch alarm history of device
      description: |
        By passing in the appropriate options, you can fetch the history of all devices.
      operationId: alarmhistory
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: country_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: region_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: city_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: category_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: state_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: user_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlarmHistory'
        '400':
          description: bad input parameter
  /device/deactivated:
    get:
      tags:
        - get
        - device
      summary: fetch all deactivated device
      description: |
        By passing in the appropriate options, you can fetch all of the deactivated devices.
      operationId: deactivateddevice
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: country_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: region_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: city_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: category_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: state_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: user_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeactivatedDevice'
        '400':
          description: bad input parameter
  '/device/{device_id}':
    get:
      tags:
        - get
        - device
      summary: fetches the identifier of the device
      description: |
        By passing in the appropriate options, you can fetch the identifier(qr) of the device
      operationId: deviceIdentifier
      parameters:
        - name: device_id
          in: path
          description: device id to fetch the device identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        '400':
          description: bad input parameter
  '/device/{device_id}/item_assignment':
    post:
      tags:
        - post
        - device
        - item
        - item assignment
      summary: creates an item assignment
      description: |
        By passing in the appropriate options, you can associate an item and a device
      operationId: itemAssignment
      parameters:
        - name: device_id
          in: path
          description: device identifier to match with the item
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Item and user to assign
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        '201':
          description: result of the item assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemAssignment'
        '400':
          description: bad input parameter
  /device/monitoring:
    get:
      tags:
        - get
        - device
      summary: fetches all device related data
      description: |
        By passing in the appropriate options, you can fetch all of the device related data for all the devices in stores.
      operationId: devicemonitoring
      parameters:
        - name: country_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: region_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: city_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: state_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
        '400':
          description: bad input parameter
  /event:
    post:
      tags:
        - post
        - event
      summary: create event
      description: you can create a event.
      requestBody:
        description: create action type
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/name_description_body'
        required: true
      responses:
        '201':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '400':
          description: bad input parameter
        '422':
          description: unprocessable entity
  /state_info:
    post:
      tags:
        - post
        - state
      summary: create state info
      description: you can create a state info.
      requestBody:
        description: create action type
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/name_description_body'
        required: true
      responses:
        '201':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateInfo'
        '400':
          description: bad input parameter
        '422':
          description: unprocessable entity
  /place:
    get:
      tags:
        - get
        - place
      summary: get places
      description: get all places.
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place'
        '400':
          description: bad input parameter
  /iot/device/version:
    get:
      tags:
        - get
        - iot
      summary: fetch scanners software version
      description: |
        you can fetch scanners software version.
      operationId: iotdeviceversion
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionHistory'
        '400':
          description: bad input parameter
  /device/version_history:
    get:
      tags:
        - get
        - device
        - version
      summary: fetch devices version history
      description: |
        you can fetch devices version history
      parameters:
        - name: pending_update
          in: query
          required: false
          schema:
            type: integer
        - name: store_id
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/DeviceVersionHistory'
        '400':
          description: bad input parameter
        '422':
          description: unprocessable entity
  /command:
    post:
      tags:
        - post
        - command
      requestBody:
        description: create command
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/command'
        required: true
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Command'
        '500':
          description: 'StatusInternalServerError, transaction rollback'
  /software_version:
    post:
      tags:
        - post
        - software_version
      summary: create soft version
      description: you can create a software version.
      requestBody:
        description: create action type
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/software_version_body'
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareVersion'
        '400':
          description: bad input parameter
        '422':
          description: unprocessable entity

    get:
      tags:
        - get
        - software_version
      parameters:
        - name: hardware_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      summary: fetch software version
      description: you can fetch scanners software version.
      operationId: softwareversionlist
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SoftwareVersion'
  /hardware_version:
    post:
      tags:
        - post
        - hardware_version
      summary: create hardware version
      parameters:
        - name: device_type_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      description: you can create a hardware version.
      requestBody:
        description: create action type
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/hardware_version_body'
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareVersion'
        '400':
          description: bad input parameter
        '422':
          description: unprocessable entity

    get:
      tags:
        - get
        - hardware_version
      summary: fetch hardware version
      description: you can fetch scanners hardware version.
      operationId: hardwareversionlist
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HardwareVersion'
  /hardware_software_assignment:
    post:
      tags:
        - post
        - hardware_software_assignment
      summary: 'create hardware software assignment '
      description: you can create a hardware software assignment.
      requestBody:
        description: create action type
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/hardware_software_assignment_body'
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareSoftwareAssignment'
        '400':
          description: bad input parameter
        '422':
          description: unprocessable entity

    get:
      tags:
        - get
        - hardware_software_assignment
      summary: fetch ardware software assignments
      description: you can fetch ardware software assignments.
      operationId: ardwaresoftwareassignment
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HardwareSoftwareAssignmentList'
  /action_type:
    post:
      tags:
        - post
        - action type
      summary: create action type
      description: you can create a action type
      operationId: actiontype
      requestBody:
        description: create action type
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/name_description_body'
        required: true
      responses:
        '201':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionType'
        '400':
          description: bad input parameter
  /device/coordinate:
    post:
      tags:
        - post
        - device
        - device coordinate
        - scanner
      summary: Create device coordinate
      description: Create device coordinate
      requestBody:
        description: Create device coordinate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/device_coordinate'
        required: true
      responses:
        '201':
          description: result of the item assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCoordinate'
        '400':
          description: bad input parameter
    get:
      tags:
        - get
        - device
        - device coordinate
        - scanner
      summary: Get device coordinates
      description: Get device coordinates
      parameters:
        - name: floor_id
          in: query
          required: false
          explode: false
          schema:
            type: string
        - name: device_id
          in: query
          required: false
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: result of the item assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCoordinateList'
        '400':
          description: bad input parameter
    put:
      tags:
        - put
        - device
        - device coordinate
      parameters:
        - name: id
          in: query
          required: true
          explode: false
          schema:
            type: string
      requestBody:
        description: Item and user to assign
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/device_coordinate_update'
        required: true
      responses:
        '201':
          description: update device coordinate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCoordinate'
        '400':
          description: bad input parameter
  '/device/{device_id}/coordinate':
    delete:
      tags:
        - delete
        - device coordinate
      summary: Delete device coordinate
      description: You can delete all coordinates of the device.
      operationId: deviceCoordinate
      parameters:
        - name: device_id
          in: path
          description: device_id
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '204':
          description: NoContent
  /merchant:
    get:
      tags:
        - merchant
        - list
      summary: get merchant list
      description: fetch all merchants
      operationId: merchantList
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdatableModel'
        '400':
          description: bad input parameter
  /merchant/web_hook_passphrase_assignment:
    post:
      tags:
        - post
        - merchant
      summary: create webhook passphrase assignment
      description: create an assignment between a new url and a merchant
      operationId: merchantWebhookPassphraseAssignmentPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                merchant_id:
                  type: integer
        description: Merchant id of the merchant the passphrase will belong to.
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      merchant_id:
                        type: integer
                      secret:
                        type: string
                      inserted_at:
                        type: string
        '400':
          description: bad input parameter
        '422':
          description: unprocessable entity
  '/merchant/web_hook_url_assignment/{assignment_id}/invalidation':
    post:
      tags:
        - post
        - merchant
      summary: invalidate merchant web hook url assignment
      description: invalidate merchant web hook url assignment
      operationId: merchantWebhookURLAssignmentInvalidation
      parameters:
        - name: assignment_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
          description: id of the assignment.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
        description: assignment id of the url belongs to.
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      assignment_id:
                        type: integer
                      user_id:
                        type: integer
                      inserted_at:
                        type: string
        '400':
          description: bad input parameter
        '422':
          description: unprocessable entity
  '/merchant/{id}/web_hook_passphrase_assignment':
    get:
      tags:
        - get
        - merchant
      summary: fetch merchant web hook secret
      description: fetch the assignments of the merchant
      operationId: merchantWebhookPassphraseGet
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
          description: id of the merchant.
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      secret:
                        type: string
                      merchant_id:
                        type: integer
                      merchant:
                        type: string
        '400':
          description: bad input parameter
        '422':
          description: unprocessable entity
  /merchant/web_hook_url_assignment:
    post:
      tags:
        - post
        - merchant
      summary: create webhook url assignment
      description: create an assignment between a new url and a merchant
      operationId: merchantWebhookURLPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                event_type_id:
                  type: integer
                store_id:
                  type: integer
        description: 'Url of the receiver, type of event the webhook will be sent on and the store id of the store the url will belong to.'
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      store_id:
                        type: integer
                      event_type_id:
                        type: integer
                      url:
                        type: string
                      inserted_at:
                        type: string
                      updated_at:
                        type: string
        '400':
          description: bad input parameter
        '422':
          description: unprocessable entity
  '/merchant/{id}/web_hook_url_assignment':
    get:
      tags:
        - get
        - merchant
      summary: create webhook url assignment
      description: fetch the assignments of the merchant
      operationId: merchantWebhookURLGet
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
          description: id of the merchant.
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                        event:
                          type: string
                        store_name:
                          type: string
        '400':
          description: bad input parameter
        '422':
          description: unprocessable entity
  '/merchant/{id}':
    get:
      tags:
        - get
        - merchant
      summary: get merchant
      description: fetch a merchant
      operationId: merchantGet
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatableModel'
        '400':
          description: bad input parameter
  '/merchant/{merchant_id}/store':
    post:
      tags:
        - store
        - post
      summary: create store
      operationId: merchantstorecreate
      parameters:
        - name: merchant_id
          in: path
          description: merchant identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchant_store'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Store'
        '400':
          description: bad input parameter
    get:
      tags:
        - store
        - list
      summary: list store
      description: list store
      operationId: merchantstorelist
      parameters:
        - name: merchant_id
          in: path
          description: merchant identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '200':
          description: created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Store'
        '404':
          description: bad input parameter
  '/merchant/{merchant_id}/device_list':
    get:
      tags:
        - get
        - merchant
      summary: fetch devices
      description: |
        You can fetch devices by sending the appropriate parameters.
      operationId: merchantdevicelist
      parameters:
        - name: merchant_id
          in: path
          description: merchant identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '200':
          description: get
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/MerchantDevice'
        '400':
          description: bad input parameter
  '/merchant/{merchant_id}/device':
    get:
      tags:
        - get
        - merchant
      summary: fetch devices
      description: |
        You can fetch devices by sending the appropriate parameters.
      operationId: merchantdevice
      parameters:
        - name: merchant_id
          in: path
          description: merchant identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '200':
          description: get
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/MerchantDevice'
        '400':
          description: bad input parameter
  '/merchant/{merchant_id}/store/{id}':
    put:
      tags:
        - put
        - store
      summary: update a merchant
      description: |
        You can update a store by sending the appropriate parameters. Updatable parameters are name, store_type_id, city_id, address.
      operationId: merchantstoreupdate
      parameters:
        - name: merchant_id
          in: path
          description: merchant identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
        - name: id
          in: path
          description: store identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merchant_store_update'
      responses:
        '201':
          description: updated
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Store'
        '400':
          description: bad input parameter
  '/merchant/{merchant_id}/item':
    post:
      tags:
        - post
        - merchant
        - item
      summary: create item
      description: You can create a item with brand name.
      operationId: itemcreatebrandname
      parameters:
        - name: merchant_id
          in: path
          required: true
          explode: false
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/item_create_brand_name'
        required: true
      responses:
        '201':
          description: created
          content:
            applicatiom/json:
              schema:
                $ref: '#/components/schemas/Item'
    get:
      tags:
        - get
        - merchant
      summary: fetch all items of a merchant
      description: |
        By passing in the appropriate options, you can fetch the items of a merchant.
      operationId: itemfilter
      parameters:
        - name: merchant_id
          in: path
          description: merchant identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemFilter'
        '400':
          description: bad input parameter
  /merchant/session/product_performance:
    get:
      tags:
        - get
        - merchant
        - product performance
      summary: fetch product performance by session
      description: |
        By passing in the appropriate options, you can fetch the performance of products partitioned by sessions.
      operationId: sessionproductperformance
      parameters:
        - name: group_by
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
            enum:
              - brand
              - item
              - product
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product_Performance_Item'
        '400':
          description: bad input parameter
  /merchant/session/sale/chart:
    get:
      tags:
        - get
        - merchant
        - session
      summary: fetch daily session count
      description: |
        By passing in the appropriate options, you can fetch daily session count.
      parameters:
        - name: group_by
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
            enum:
              - brand
              - item
              - product
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session_Sale_Chart'
        '400':
          description: bad input parameter
  /merchant/session_funnel:
    get:
      tags:
        - get
        - merchant
        - session
      summary: fetch session event rates
      description: |
        By passing in the appropriate options, you can fetch session event rates.
      parameters:
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SessionFunnel'
        '400':
          description: bad input parameter
  /merchant/session/funnel_term:
    get:
      tags:
        - session
      summary: fetch session event rates with two dates
      description: |
        By passing in the appropriate options, you can fetch session event rates.
      operationId: merchantsessionfunnelterm
      parameters:
        - name: term
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - daily
              - weekly
              - monthly
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionFunnelTerm'
        '400':
          description: bad input parameter
  /merchant/session/daily:
    get:
      tags:
        - get
        - merchant
        - session
      summary: fetch session daily count
      description: |
        By passing in the appropriate options, you can fetch the risky items which are items not armed for more than 1 hour.
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: term
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionDaily'
        '400':
          description: bad input parameter
  /merchant/session/add_to_cart/daily:
    get:
      tags:
        - get
        - merchant
        - session
      summary: fetch session daily count
      description: |
        By passing in the appropriate options, you can fetch the risky items which are items not armed for more than 1 hour.
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: term
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionAverageBasketTimeDaily'
        '400':
          description: bad input parameter
  /merchant/session/average_basket_time/daily:
    get:
      tags:
        - get
        - merchant
        - session
      summary: fetch session daily count
      description: |
        By passing in the appropriate options, you can fetch the risky items which are items not armed for more than 1 hour.
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: term
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionAddToCartDaily'
        '400':
          description: bad input parameter
  /merchant/alarm_count/daily:
    get:
      tags:
        - get
        - merchant
        - session
      summary: fetch session daily count
      description: |
        By passing in the appropriate options, you can fetch the risky items which are items not armed for more than 1 hour.
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: term
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlarmCountDaily'
        '400':
          description: bad input parameter
  /merchant/risky_item:
    get:
      tags:
        - get
        - merchant
      summary: fetch risky items
      description: |
        By passing in the appropriate options, you can fetch the risky items which are items not armed for more than 1 hour.
      operationId: riskyitem
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemData'
        '400':
          description: bad input parameter
  /merchant/missing_item:
    get:
      tags:
        - get
        - merchant
      summary: fetch risky items
      description: |
        By passing in the appropriate options, you can fetch the missing items which are
          according to the time set by the merchants
      operationId: missingitem
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MissingItem'
        '400':
          description: bad input parameter
  /merchant/information:
    get:
      tags:
        - get
      summary: fetch merchant information.
      description: |
        fetch merchant information.
      operationId: merchantInformation
      parameters:
        - name: mrchant_id
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MerchantInformation'
        '400':
          description: bad input parameter
  /store/information:
    get:
      tags:
        - get
        - store
      summary: fetch store information.
      description: |
        fetch store information.
      operationId: storeinformation
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreInformation'
        '400':
          description: bad input parameter
  /merchant/store/daily_sale:
    post:
      tags:
        - post
        - sale
      summary: create daily sale.
      description: |
        create daily sale
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/daily_sale'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailySale'
        '400':
          description: bad input parameter
  /merchant/store_type:
    get:
      tags:
        - get
      summary: fetch store types.
      description: |
        fetch store types
      operationId: merchantstoretype
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdatableModel'
        '400':
          description: bad input parameter
  /merchant/store/interest_to_basket:
    get:
      tags:
        - get
        - merchant
      summary: fetch basket interest
      description: |
        By passing in the appropriate options, you can fetch the basket interest counts of all customers.
      operationId: interestintbasket
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: country_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: region_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: city_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: category_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: state_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: user_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestToBasket'
        '400':
          description: bad input parameter
  /merchant/store/user/assignment_count:
    get:
      tags:
        - get
        - merchant
      summary: fetch device assignment count
      description: |
        By passing in the appropriate options, you can fetch the assignment count of all devices.
      operationId: assignmentcount
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: country_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: region_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: city_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: category_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: state_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: user_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentCount'
        '400':
          description: bad input parameter
  '/merchant/store/{store_id}/scanner':
    get:
      tags:
        - get
        - merchant
      summary: fetch all scanners of a merchant
      description: |
        By passing in the appropriate options, you can fetch the scanners of a store.
      operationId: scannerfilter
      parameters:
        - name: store_id
          in: path
          description: store identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ScannerManagement'
        '400':
          description: bad input parameter
  /retail_action:
    get:
      tags:
        - Retail Action
      summary: Get retail action
      operationId: merchantRetailAction
      description: |
        You can fetch all item related retail action information for your merchant by passing in your hardware type, aggregation functions, time filters, sorting options, limiting options and combination options. Some query filters are not applyible to every event.
      parameters:
        - $ref: '#/components/parameters/PlaceID'
        - $ref: '#/components/parameters/BrandID'
        - $ref: '#/components/parameters/ZoneID'
        - $ref: '#/components/parameters/CategoryID'
        - $ref: '#/components/parameters/ItemID'
        - $ref: '#/components/parameters/UserID'
        - $ref: '#/components/parameters/TagID'
        - $ref: '#/components/parameters/AggregationFunction'
        - $ref: '#/components/parameters/RetailEvent'
        - $ref: '#/components/parameters/StartDate'
        - $ref: '#/components/parameters/EndDate'
        - $ref: '#/components/parameters/GroupBy'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/RetailResponse'
                  - $ref: '#/components/schemas/ZoneResponse'
                  - $ref: '#/components/schemas/CategoryResponse'
                  - $ref: '#/components/schemas/BrandResponse'
                  - $ref: '#/components/schemas/TagResponse'
                  - $ref: '#/components/schemas/UserResponse'
                  - $ref: '#/components/schemas/PlaceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /hardware/status:
    get:
      tags:
        - Hardware Status
      summary: Get hardware status
      operationId: merchantHardwareStatus
      description: |
        You can fetch all hardware status related information for your merchant by passing in your hardware type, aggregation functions, time filters, sorting options, limiting options and combination options. Some query filters are not applyible to every event.
      parameters:
        - $ref: '#/components/parameters/PlaceID'
        - $ref: '#/components/parameters/BrandID'
        - $ref: '#/components/parameters/ZoneID'
        - $ref: '#/components/parameters/CategoryID'
        - $ref: '#/components/parameters/ItemID'
        - $ref: '#/components/parameters/UserID'
        - $ref: '#/components/parameters/TagID'
        - $ref: '#/components/parameters/AggregationFunction'
        - $ref: '#/components/parameters/HardwareEvent'
        - $ref: '#/components/parameters/HardwareStatusEvent'
        - $ref: '#/components/parameters/StartDate'
        - $ref: '#/components/parameters/EndDate'
        - $ref: '#/components/parameters/GroupBy'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/HardwareStatusResponse'
                  - $ref: '#/components/schemas/ZoneResponse'
                  - $ref: '#/components/schemas/CategoryResponse'
                  - $ref: '#/components/schemas/BrandResponse'
                  - $ref: '#/components/schemas/TagResponse'
                  - $ref: '#/components/schemas/UserResponse'
                  - $ref: '#/components/schemas/PlaceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /insight:
    get:
      tags:
        - Insight
      summary: Get insights
      operationId: merchantInsight
      description: |
        You can fetch all item related business insight calculations for your merchant by passing in your insight type, aggregation functions, time filters, sorting options, limiting options and combination options.
      parameters:
        - $ref: '#/components/parameters/PlaceID'
        - $ref: '#/components/parameters/BrandID'
        - $ref: '#/components/parameters/ZoneID'
        - $ref: '#/components/parameters/CategoryID'
        - $ref: '#/components/parameters/ItemID'
        - $ref: '#/components/parameters/UserID'
        - $ref: '#/components/parameters/TagID'
        - $ref: '#/components/parameters/InsightType'
        - $ref: '#/components/parameters/AggregationFunction'
        - $ref: '#/components/parameters/StartDate'
        - $ref: '#/components/parameters/EndDate'
        - $ref: '#/components/parameters/GroupBy'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/InsightResponse'
                  - $ref: '#/components/schemas/ZoneResponse'
                  - $ref: '#/components/schemas/CategoryResponse'
                  - $ref: '#/components/schemas/BrandResponse'
                  - $ref: '#/components/schemas/TagResponse'
                  - $ref: '#/components/schemas/UserResponse'
                  - $ref: '#/components/schemas/PlaceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /security:
    get:
      tags:
        - Security Event
      summary: Get security events
      operationId: merchantSecurity
      description: |
        You can fetch all item related security events for your merchant by passing in your event type, aggregation functions, time filters, sorting options, limiting options and combination options.
      parameters:
        - $ref: '#/components/parameters/PlaceID'
        - $ref: '#/components/parameters/BrandID'
        - $ref: '#/components/parameters/ZoneID'
        - $ref: '#/components/parameters/CategoryID'
        - $ref: '#/components/parameters/ItemID'
        - $ref: '#/components/parameters/UserID'
        - $ref: '#/components/parameters/TagID'
        - $ref: '#/components/parameters/SecurityEvent'
        - $ref: '#/components/parameters/AggregationFunction'
        - $ref: '#/components/parameters/StartDate'
        - $ref: '#/components/parameters/EndDate'
        - $ref: '#/components/parameters/GroupBy'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/SecurityResponse'
                  - $ref: '#/components/schemas/ZoneResponse'
                  - $ref: '#/components/schemas/CategoryResponse'
                  - $ref: '#/components/schemas/BrandResponse'
                  - $ref: '#/components/schemas/TagResponse'
                  - $ref: '#/components/schemas/UserResponse'
                  - $ref: '#/components/schemas/PlaceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /interaction:
    get:
      tags:
        - Interaction Event
      summary: Get interaction events
      operationId: merchantInteraction
      description: |
        You can fetch all interactions events for your merchant by passing in your event type, aggregation functions, time filters, sorting options, limiting options and combination options.
      parameters:
        - $ref: '#/components/parameters/PlaceID'
        - $ref: '#/components/parameters/BrandID'
        - $ref: '#/components/parameters/ZoneID'
        - $ref: '#/components/parameters/CategoryID'
        - $ref: '#/components/parameters/ItemID'
        - $ref: '#/components/parameters/UserID'
        - $ref: '#/components/parameters/TagID'
        - $ref: '#/components/parameters/InteractionEvent'
        - $ref: '#/components/parameters/AggregationFunction'
        - $ref: '#/components/parameters/StartDate'
        - $ref: '#/components/parameters/EndDate'
        - $ref: '#/components/parameters/GroupBy'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/InteractionResponse'
                  - $ref: '#/components/schemas/ItemResponse'
                  - $ref: '#/components/schemas/ZoneResponse'
                  - $ref: '#/components/schemas/CategoryResponse'
                  - $ref: '#/components/schemas/BrandResponse'
                  - $ref: '#/components/schemas/TagResponse'
                  - $ref: '#/components/schemas/UserResponse'
                  - $ref: '#/components/schemas/PlaceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /stock:
    get:
      tags:
        - Stock
      summary: Get stock
      operationId: merchantStock
      description: |
        You can fetch all stock related information for items in your merchant by passing in your event type, aggregation functions, time filters, sorting options, limiting options and combination options.
      parameters:
        - $ref: '#/components/parameters/PlaceID'
        - $ref: '#/components/parameters/BrandID'
        - $ref: '#/components/parameters/ZoneID'
        - $ref: '#/components/parameters/CategoryID'
        - $ref: '#/components/parameters/ItemID'
        - $ref: '#/components/parameters/UserID'
        - $ref: '#/components/parameters/TagID'
        - $ref: '#/components/parameters/StockEvent'
        - $ref: '#/components/parameters/AggregationFunction'
        - $ref: '#/components/parameters/StartDate'
        - $ref: '#/components/parameters/EndDate'
        - $ref: '#/components/parameters/GroupBy'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ItemResponse'
                  - $ref: '#/components/schemas/ZoneResponse'
                  - $ref: '#/components/schemas/CategoryResponse'
                  - $ref: '#/components/schemas/BrandResponse'
                  - $ref: '#/components/schemas/TagResponse'
                  - $ref: '#/components/schemas/UserResponse'
                  - $ref: '#/components/schemas/PlaceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /hardware:
    get:
      tags:
        - Hardware
      summary: Get hardware
      operationId: merchantHardware
      description: |
        You can fetch all hardware related information for your merchant by passing in your hardware type, aggregation functions, time filters, sorting options, limiting options and combination options.
      parameters:
        - $ref: '#/components/parameters/PlaceID'
        - $ref: '#/components/parameters/BrandID'
        - $ref: '#/components/parameters/ZoneID'
        - $ref: '#/components/parameters/CategoryID'
        - $ref: '#/components/parameters/ItemID'
        - $ref: '#/components/parameters/UserID'
        - $ref: '#/components/parameters/TagID'
        - $ref: '#/components/parameters/AggregationFunction'
        - $ref: '#/components/parameters/HardwareEvent'
        - $ref: '#/components/parameters/StartDate'
        - $ref: '#/components/parameters/EndDate'
        - $ref: '#/components/parameters/GroupBy'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      hardware:
                        items:
                          $ref: '#/components/schemas/Hardware'
                      total_aggregation_calculation:
                        type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
  /merchant/store/alarm_rate:
    get:
      tags:
        - get
        - merchant
      summary: fetch alarm rate
      description: |
        By passing in the appropriate options, you can fetch the alarm rate of devices.
      operationId: alarmrate
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: country_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: region_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: city_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: category_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: state_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: user_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlarmRate'
        '400':
          description: bad input parameter
  /merchant/store/session_rate:
    get:
      tags:
        - get
        - merchant
      summary: fetch session rate
      description: |
        By passing in the appropriate options, you can fetch the session rate. devices.
      operationId: sessionrate
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlarmRate'
        '400':
          description: bad input parameter
  /merchant/store/device:
    get:
      tags:
        - get
        - store
      summary: fetch device list
      description: |
        By passing in the appropriate options, you can fetch the devices
      operationId: merchantstoredevice
      parameters:
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
        - name: group_by
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            enum:
              - store
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StoreDevice'
        '400':
          description: bad input parameter
  /merchant/most_interaction_zone:
    get:
      tags:
        - get
        - merchant
      summary: fetch most interacted zones
      description: |
        By passing in the appropriate options, you can fetch the zones where items were most interacted with.
      operationId: mostinteractedzone
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: country_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: region_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: city_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: category_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: state_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: user_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: sort
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Zone'
        '400':
          description: bad input parameter
  /merchant/most_interaction_hour:
    get:
      tags:
        - get
        - merchant
      summary: fetch most interacted hours
      description: |
        By passing in the appropriate options, you can fetch the hours when most interactions happened.
      operationId: mostinteractionhour
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: country_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: region_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: city_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: category_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: state_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: user_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Most_Interaction_Hour'
        '400':
          description: bad input parameter
  /merchant/most_alarmed_zone:
    get:
      tags:
        - get
        - merchant
      summary: fetch most alarmed zones
      description: |
        By passing in the appropriate options, you can fetch the most alarmed zones.
      operationId: mostalarmedzone
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: country_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: region_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: city_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: category_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: state_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: user_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlarmedZone'
        '400':
          description: bad input parameter
  /merchant/most_session_item:
    get:
      tags:
        - get
        - merchant
      summary: fetch most interacted item
      description: |
        By passing in the appropriate options, you can fetch the most interacted items.
      operationId: mostinteracteditem
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: country_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: region_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: city_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: category_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: state_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: user_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SessionItem'
        '400':
          description: bad input parameter
  /merchant/most_alarmed_device:
    get:
      tags:
        - get
        - merchant
      summary: fetch most alarmed devices
      description: |
        By passing in the appropriate options, you can fetch most alarmed devices.
      operationId: mostalarmeddevice
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: country_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: region_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: city_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: category_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: state_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: user_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlarmedDevice'
        '400':
          description: bad input parameter
  /merchant/most_alarmed_item:
    get:
      tags:
        - get
        - merchant
      summary: fetch most alarmed items
      description: |
        By passing in the appropriate options, you can fetch most alarmed items.
      operationId: mostalarmeditem
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: country_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: region_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: city_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: category_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: state_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: user_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlarmedItem'
        '400':
          description: bad input parameter
  /merchant/most_alarmed_hour:
    get:
      tags:
        - get
        - merchant
      summary: fetch hourly most alarmed devices
      description: |
        By passing in the appropriate options, you can fetch most alarmed devices grouped on an hourly basis.
      operationId: mostalarmedhour
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: country_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: region_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: city_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: category_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: state_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Most_Alarmed_Hour'
        '400':
          description: bad input parameter
  /merchant/session:
    get:
      tags:
        - get
        - session
      summary: fetch session list
      description: |
        By passing in the appropriate options, you can fetch sessions.
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SessionList'
        '400':
          description: bad input parameter
  /merchant/daily_report:
    get:
      tags:
        - get
        - daily report
      summary: fetch daily report list
      description: |
        By passing in the appropriate options, you can fetch daily report.
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyReport'
        '400':
          description: bad input parameter
  /merchant/store/daily_report:
    get:
      tags:
        - get
        - daily report store comparison
      summary: fetch daily report store comparison list
      description: |
        By passing in the appropriate options, you can fetch daily report store comparison report.
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DailyStoreReport'
        '400':
          description: bad input parameter
  /merchant/most_interaction_item:
    get:
      tags:
        - get
        - most interaction item
      summary: fetch most interaction item list with sort (ASC | Default DESC)
      description: |
        By passing in the appropriate options, you can fetch most interaction item report.
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: country_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: region_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: city_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: category_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: state_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: user_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: sort
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MostInteractionItem'
        '400':
          description: bad input parameter
  /device_status:
    get:
      tags:
        - get
        - device status
      summary: fetch device status
      description: |
        By passing in the appropriate options, you can fetch device status report.
      parameters:
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceStatus'
        '400':
          description: bad input parameter
  /stock_quality:
    get:
      tags:
        - get
        - stock quality
      summary: fetch stock quality
      description: |
        By passing in the appropriate options, you can fetch stock quality report. Pass item_id for most interacted item
      parameters:
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StockQuality'
        '400':
          description: bad input parameter
  /merchant/alarmed/average_response:
    get:
      tags:
        - get
        - average response
      summary: fetch average response list
      description: |
        By passing in the appropriate options, you can fetch average response report.
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: merchant_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: country_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: region_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: city_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: category_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: item_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: state_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: user_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AverageResponse'
        '400':
          description: bad input parameter
  /map:
    post:
      tags:
        - post
        - map
      summary: create a places map
      description: create map
      operationId: createmap
      requestBody:
        description: name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/map_create'
        required: true
      responses:
        '201':
          description: result of the map create
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
        '400':
          description: bad input parameter
        '422':
          description: unprocessable entity
    get:
      tags:
        - get
        - list
        - map
      summary: get maps list
      description: get maps detail data
      operationId: listmap
      parameters:
        - name: map_id
          in: query
          required: false
          schema:
            type: integer
        - name: area_id
          in: query
          required: false
          schema:
            type: integer
        - name: store_id
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: list of maps
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapList'
  '/map/{id}':
    put:
      tags:
        - put
        - map
      summary: update map
      description: update the name or/and grid or/and base ratio of a map
      operationId: update map
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/map_update'
        required: true
      responses:
        '201':
          description: result of the map update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'
        '400':
          description: bad input parameter
        '422':
          description: unprocessable entity
    get:
      tags:
        - get
        - map
      summary: get map
      description: get map datas with merchant name
      operationId: getMap
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: get map
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapwithMerchantName'
    delete:
      tags:
        - delete
        - map
      summary: delete a map
      description: delete a map
      operationId: deleteMap
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: NoContent
  '/map/{map_id}/floor':
    get:
      tags:
        - get
        - list
        - floor
      summary: get floor
      description: get all floor
      operationId: getFloorList
      parameters:
        - name: map_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: list of maps
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapFloorList'
  /map/area:
    post:
      tags:
        - post
        - area
      summary: create area
      description: create a area of floor
      requestBody:
        description: name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/map_area_create'
        required: true
      responses:
        '200':
          description: created map floor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapArea'
    put:
      tags:
        - put
        - area
      summary: update area
      description: updata name of area
      requestBody:
        description: name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/map_area_create'
        required: true
      responses:
        '201':
          description: list of maps floor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapArea'
  '/map/area/{id}':
    delete:
      tags:
        - delete
        - area
      summary: get floor
      description: get all floor
      operationId: deleteArea
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: NoContent
  /map/area/coordinate:
    post:
      tags:
        - area coordinate
        - post
      summary: create coordinate
      description: create coordinate of a area
      requestBody:
        description: name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/map_area_coordinate_create'
      responses:
        '201':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapAreaCoordinate'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
    put:
      tags:
        - area coordinate
        - put
      summary: update coordinate
      description: update area coordinate
      requestBody:
        description: name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/map_area_coordinate_update'
      responses:
        '201':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapAreaCoordinate'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
    get:
      tags:
        - area coordinate
        - list
      summary: area coordinate list
      description: area coordinate list
      parameters:
        - name: map_id
          in: query
          required: false
          schema:
            type: integer
        - name: area_id
          in: query
          required: false
          schema:
            type: integer
        - name: store_id
          in: query
          required: false
          schema:
            type: integer
        - name: floor_id
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapAreaCoordinateList'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  '/map/area/coordinate/{id}':
    delete:
      tags:
        - delete
        - area coordinate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: NoContent
  /zone:
    post:
      tags:
        - post
        - tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zone_create'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone_'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
    put:
      tags:
        - update
        - zone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zone_update'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone_'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
    get:
      tags:
        - zone
        - get
      parameters:
        - name: store_id
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: created
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Zone_'
                  - $ref: '#/components/schemas/ZoneArray_'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  '/zone/{id}':
    delete:
      tags:
        - delete
        - zone
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: NoContent
  /zone/coordinate:
    post:
      tags:
        - zone
        - post
      summary: create zone test
      description: create zone test
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zone_coordinate_create'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneCoordinate'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
    get:
      tags:
        - zone
        - get
      summary: fetch zone coordinate
      description: fetch zone coordinate
      parameters:
        - name: zone_id
          in: query
          required: false
          schema:
            type: integer
        - name: floor_id
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneCoordinateList'
    put:
      tags:
        - zone
        - put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zone_coordinate_update'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneCoordinate'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  '/zone/coordinate/{id}':
    delete:
      tags:
        - zone
        - delete
      summary: delete zone coordinate
      description: create zone coordinate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: NoContent
  /zone/floor_assignment:
    post:
      tags:
        - zone
        - post
      summary: assigned zone floor assignment
      description: assigned zone floor assignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zone_floor_assignment'
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneFloorAssignment'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  /zone/type:
    get:
      tags:
        - zone type
        - get
      summary: fetch zone type
      description: fetch zone type
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneType'
  /zone/performance:
    get:
      tags:
        - zone performance
        - get
      summary: fetch zone performance
      description: |
        By passing in the appropriate options, you can fetch zone performance
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonePerformance'
  /zone/session_list:
    get:
      tags:
        - zone session
        - get
      summary: fetch zone session
      description: |
        By passing in the appropriate options, you can fetch zone sessions
      parameters:
        - name: store_id
          in: query
          required: false
          schema:
            type: integer
        - name: merchant_id
          in: query
          required: false
          schema:
            type: integer
        - name: zone_id
          in: query
          required: false
          schema:
            type: integer
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ZoneSession'
  /zone/performance/session_funnel:
    get:
      tags:
        - zone
        - session
      summary: fetch session funnel
      description: fetch session funnel
      parameters:
        - name: store_id
          in: query
          required: false
          schema:
            type: integer
        - name: merchant_id
          in: query
          required: false
          schema:
            type: integer
        - name: zone_id
          in: query
          required: false
          schema:
            type: integer
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone_Session'
  '/zone/performance/session/{session_id}/performance_detail':
    get:
      tags:
        - zone
        - get
      summary: ferch zone performance detail
      description: fetch zone performance detail
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonePerformanceDetail'
  /zone/session_interaction:
    get:
      tags:
        - zone
      summary: fetch zone session interaction
      description: fetch zone session interaction
      parameters:
        - name: term
          in: query
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 2
              - 3
        - name: store_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneSessionInteraction'
  /zone/stock:
    get:
      tags:
        - zone
        - stock
      summary: fetch zone stock
      description: fetch zone stock
      parameters:
        - name: start_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: zone_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
        - name: brand_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneStock'
  /zone/stock_rate:
    get:
      tags:
        - get stock rate
        - zone
      parameters:
        - name: store_id
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneStockRate'
  /ab_test:
    post:
      tags:
        - ab test
        - experimentation
        - post
      summary: create ab test
      description: create ab test
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ab_test_create'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AB_Test_Create'
    get:
      tags:
        - ab test
        - experimentation
        - get
      summary: get ab tests
      description: get ab tests
      parameters:
        - name: merchant_id
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestList'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  '/ab_test/{id}':
    get:
      tags:
        - ab test
        - experimentation
        - get
      summary: get ab test
      description: get ab test
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestList'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  '/ab_test/{id}/delete':
    put:
      tags:
        - ab test
        - experimentation
        - delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: NoContent
  '/ab_test/{id}/finish':
    put:
      tags:
        - ab test
        - experimentation
        - finish
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: NoContent
  /ab_test/type:
    get:
      tags:
        - ab test
        - experimentation
        - get
      summary: get ab test types
      description: get ab test types
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestTypes'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  '/ab_test/type/{id}':
    get:
      tags:
        - ab test
        - experimentation
        - get
      summary: get ab test type
      description: get ab test type
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestType'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  /ab_test/group:
    post:
      tags:
        - ab test
        - experimentation
        - post
      summary: create ab test group
      description: create ab test group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ab_test_group_create'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestGroupCreate'
    get:
      tags:
        - ab test
        - experimentation
        - get
      summary: get ab test groups
      description: get ab test groups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestGroupCreate'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  '/ab_test/group/{id}':
    get:
      tags:
        - ab test
        - experimentation
        - get
      summary: get ab test group
      description: get ab test group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestGroup'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  '/ab_test/{test_id}/location/assignment':
    post:
      tags:
        - ab test
        - experimentation
        - post
      summary: create ab test location assignment
      description: create ab test location assignment
      parameters:
        - name: test_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ab_test_create_location_assigment'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestCreateLocationAssignment'
    get:
      tags:
        - ab test
        - experimentation
        - get
      summary: get ab test location assignment
      description: get ab test location assignment
      parameters:
        - name: test_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestLocationAssignment'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  /ab_test/group/variation:
    post:
      tags:
        - ab test
        - experimeantation
        - post
      summary: create ab test group variation
      description: create ab test group variation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ab_test_create_group_variation'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestCreateGroupVariation'
    get:
      tags:
        - ab test
        - experimentation
        - get
      summary: get ab test group variation
      description: get ab test group variation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestGroupVariation'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  '/ab_test/group/variation/{id}':
    get:
      tags:
        - ab test
        - experimentation
        - get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      summary: get ab test group variation with id
      description: get ab test group variation with id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestGroupVariation'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  /ab_test/entity:
    get:
      tags:
        - ab test
        - experimentation
        - get
      summary: get ab test entity
      description: get ab test entity
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestEntity'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  /ab_test/text:
    post:
      tags:
        - ab test
        - experimentation
        - post
      summary: create ab test text
      description: create ab test text
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ab_test_create_text'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestText'
    get:
      tags:
        - ab test
        - experimentation
        - get
      summary: get ab test text
      description: get ab test text
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestTextList'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  '/ab_test/variation/{variation_id}/item/assignment':
    post:
      tags:
        - ab test
        - experimentation
        - post
      parameters:
        - name: variation_id
          in: path
          required: true
          schema:
            type: integer
      summary: create ab test variation item assignment
      description: create ab test variation item assignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ab_test_variation_item_assignment'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestVariationItemAssignment'
    get:
      tags:
        - ab test
        - experimentation
        - get
      parameters:
        - name: variation_id
          in: path
          required: true
          schema:
            type: integer
      summary: get ab test variation item assignment
      description: get ab test variation item assignment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestVariationItemAssignmentList'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  '/ab_test/variation/{variation_id}/zone/assignment':
    post:
      tags:
        - ab test
        - experimentation
        - post
      parameters:
        - name: variation_id
          in: path
          required: true
          schema:
            type: integer
      summary: create ab test variation zone assignment
      description: create ab test variation zone assignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ab_zone_variation_item_assignment'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestVariationZoneAssignment'
    get:
      tags:
        - ab test
        - experimentation
        - get
      parameters:
        - name: variation_id
          in: path
          required: true
          schema:
            type: integer
      summary: get ab test variation zone assignment
      description: get ab test variation zone assignment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestVariationZoneAssignmentList'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  '/ab_test/variation/{variation_id}/text/assignment':
    post:
      tags:
        - ab test
        - experimentation
        - post
      parameters:
        - name: variation_id
          in: path
          required: true
          schema:
            type: integer
      summary: create ab test variation text assignment
      description: create ab test variation text assignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ab_text_variation_text_assignment'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestVariationTextAssignment'
    get:
      tags:
        - ab test
        - experimentation
        - get
      parameters:
        - name: variation_id
          in: path
          required: true
          schema:
            type: integer
      summary: get ab test variation text assignment
      description: get ab test variation text assignment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestVariationItemAssignmentList'
        '400':
          description: BadRequest
        '422':
          description: UnprocessableEntity
  '/ab_test/{test_id}/group/{group_id}/variation/result':
    get:
      tags:
        - ab test
        - experimentation
        - get
      parameters:
        - name: test_id
          in: path
          required: true
          schema:
            type: integer
        - name: group_id
          in: path
          required: true
          schema:
            type: integer
        - name: entity_type_id
          in: query
          required: true
          schema:
            type: integer
        - name: base
          in: query
          required: true
          schema:
            type: string
            enum:
              - sale
              - add_to_cart
      summary: get ab test group variation result
      description: get ab test group variation result
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interaction_Response_200_Item'
  /ab_test/daily_result:
    get:
      tags:
        - ab test
        - experimentation
        - get
      parameters:
        - name: test_id
          in: query
          required: true
          schema:
            type: integer
        - name: group_id
          in: query
          required: true
          schema:
            type: integer
        - name: entity_type_id
          in: query
          required: true
          schema:
            type: integer
        - name: metric
          in: query
          required: true
          schema:
            type: string
            enum:
              - sale
              - picked_up
              - add_to_cart
              - average_stock_count
              - picked_up_to_walking
              - picked_up_to_sales
      summary: get ab test group variation daily result
      description: get ab test group variation daily result
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExperimentationDailyResultPickedUp'
                  - $ref: '#/components/schemas/ExperimentationDailyResultPickedUpToSales'
                  - $ref: '#/components/schemas/ExperimentationDailyResultPickedUpToWalking'
                  - $ref: '#/components/schemas/ExperimentationDailyResultSale'
                  - $ref: '#/components/schemas/ExperimentationDailyResultAverageStock'
  /ab_test/store_result:
    get:
      tags:
        - ab test
        - experimentation
        - get
      parameters:
        - name: test_id
          in: query
          required: true
          schema:
            type: integer
        - name: group_id
          in: query
          required: true
          schema:
            type: integer
        - name: entity_type_id
          in: query
          required: true
          schema:
            type: integer
        - name: base
          in: query
          required: true
          schema:
            type: string
            enum:
              - add_to_cart
              - sale
      summary: get ab test group variation daily result
      description: get ab test group variation daily result
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Experimentation_Store_Result_Add_To_Cart'
                  - $ref: '#/components/schemas/Experimentation_Store_Result'
  /ab_test/item_result:
    get:
      tags:
        - ab test
        - experimentation
        - get
      parameters:
        - name: test_id
          in: query
          required: true
          schema:
            type: integer
        - name: group_id
          in: query
          required: true
          schema:
            type: integer
        - name: entity_type_id
          in: query
          required: true
          schema:
            type: integer
        - name: base
          in: query
          required: true
          schema:
            type: string
            enum:
              - add_to_cart
              - sale
      summary: get ab test group variation daily result
      description: get ab test group variation daily result
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Experimentation_Item_Result_Add_To_Cart'
                  - $ref: '#/components/schemas/Experimentation_Item_Result'
  /ab_test/information:
    get:
      tags:
        - ab test
        - experimentation
        - get
      parameters:
        - name: entity_type_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experimentation_Information'
components:
  responses:
    BadRequest:
      description: The request was unacceptable.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: No valid API key provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: The API key doesn't have permissions to perform the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    sign_in_body:
      type: object
      properties:
        user_name:
          type: string
        password:
          type: string
    body_create_name:
      type: object
      properties:
        name:
          type: string
    name_description_body:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    command:
      type: object
      properties:
        device_id:
          type: integer
        command_type_id:
          type: integer
    software_version_body:
      type: object
      properties:
        description:
          type: string
        device_type_id:
          type: integer
        version:
          type: string
        version_url:
          type: string
    hardware_version_body:
      type: object
      properties:
        description:
          type: string
        device_type_id:
          type: integer
        version:
          type: string
        image_url:
          type: string
    hardware_software_assignment_body:
      type: object
      properties:
        software_id:
          type: integer
        hardware_id:
          type: integer
    user_create:
      type: object
      properties:
        source_user_id:
          type: integer
        name:
          type: string
        password:
          type: string
        merchant_id:
          type: integer
        store_id:
          type: integer
        email:
          type: string
    zone_create:
      type: object
      properties:
        name:
          type: string
        store_id:
          type: integer
        type_id:
          type: integer
    zone_update:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type_id:
          type: integer
    zone_coordinate_create:
      type: object
      properties:
        zone_id:
          type: integer
        x:
          type: number
        'y':
          type: number
        z:
          type: number
        r:
          type: number
        circle:
          type: boolean
    zone_floor_assignment:
      type: object
      properties:
        zone_id:
          type: integer
        floor_id:
          type: integer
    zone_coordinate_update:
      type: object
      properties:
        id:
          type: integer
        x:
          type: number
        'y':
          type: number
        r:
          type: number
        z:
          type: number
    ab_test_create:
      type: object
      properties:
        hypothesis:
          type: string
        test_type_id:
          type: integer
        user_id:
          type: integer
    ab_test_group_create:
      type: object
      properties:
        groups:
          items:
            type: object
            properties:
              test_id:
                type: integer
              name:
                type: string
              entity_type_id:
                type: integer
    ab_test_create_location_assigment:
      type: object
      properties:
        test_id:
          type: integer
        store_id:
          type: integer
    ab_test_create_group_variation:
      type: object
      properties:
        name:
          type: string
        variation_type_id:
          type: integer
        group_id:
          type: integer
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
    ab_test_create_text:
      type: object
      properties:
        text:
          type: string
    ab_test_variation_item_assignment:
      type: object
      properties:
        variation_id:
          type: integer
        item_id:
          type: integer
        min_stock:
          type: integer
    ab_zone_variation_item_assignment:
      type: object
      properties:
        variation_id:
          type: integer
        zone_id:
          type: integer
        min_stock:
          type: integer
    ab_text_variation_text_assignment:
      type: object
      properties:
        variation_id:
          type: integer
        text_id:
          type: integer
        min_stock:
          type: integer
    merchant_store:
      type: object
      properties:
        merchant_id:
          type: integer
        city_id:
          type: integer
        source_user_id:
          type: integer
        store_type_id:
          type: integer
        name:
          type: string
        address:
          type: string
        external_guid:
          type: integer
        external_id:
          type: integer
        external_str_id:
          type: string
    daily_sale:
      type: object
      properties:
        sku:
          type: string
        store_id:
          type: integer
        total_revenue:
          type: number
        sale_count:
          type: integer
    sign_in_token_body:
      type: object
      properties:
        passphrase:
          type: integer
        user_id:
          type: integer
    sign_in_third_party_body:
      type: object
      properties:
        user_id:
          type: string
        token:
          type: string
    user_merchant_assignment_body:
      type: object
      properties:
        source_user_id:
          type: integer
        merchant_id:
          type: integer
    user_merchant_assignment_invalidation_body:
      type: object
      properties:
        source_user_id:
          type: integer
        user_merchant_assignment_id:
          type: integer
    user_store_assignment_body:
      type: object
      properties:
        source_user_id:
          type: integer
        merchant_store_id:
          type: integer
    user_personal_information_update_body:
      type: object
      properties:
        name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        title:
          type: string
    user_phone_number_update_body:
      type: object
      properties:
        phone_number:
          type: string
    user_email_address_update_body:
      type: object
      properties:
        number:
          type: string
    user_name_update_body:
      type: object
      properties:
        name:
          type: string
        source_user_id:
          type: integer
    merchant_store_update:
      type: object
      properties:
        name:
          type: string
        store_type_id:
          type: integer
        city_id:
          type: integer
        address:
          type: string
    item_create_brand_name:
      type: object
      properties:
        name:
          type: string
        brand_name:
          type: string
        description:
          type: string
        upc:
          type: string
        sku:
          type: string
        meta_data:
          type: object
    device_coordinate:
      type: object
      properties:
        device_id:
          type: integer
        floor_id:
          type: integer
        x:
          type: integer
        'y':
          type: integer
    device_coordinate_update:
      type: object
      properties:
        x:
          type: integer
        'y':
          type: integer
    device_alarm_action:
      type: object
      properties:
        alarm_history_id:
          type: integer
        user_id:
          type: integer
        action_type_id:
          type: integer
        source_device_id:
          type: integer
    body:
      type: object
      properties:
        item_id:
          type: integer
        source_user_id:
          type: integer
    body_3:
      type: object
      properties:
        passphrase_id:
          type: integer
        client_name:
          type: string
        device_brand:
          type: string
        device_model:
          type: string
        os_name:
          type: string
        os_platform:
          type: string
        os_version:
          type: string
        token:
          type: string
    map_create:
      type: object
      properties:
        store_id:
          type: integer
        name:
          type: string
        base_ratio:
          type: number
        grid:
          type: number
    map_update:
      type: object
      properties:
        name:
          type: string
        base_ratio:
          type: number
        grid:
          type: number
    map_area_create:
      type: object
      properties:
        name:
          type: string
        floor_id:
          type: integer
    map_area_coordinate_create:
      type: object
      properties:
        area_id:
          type: integer
        x:
          type: number
        'y':
          type: number
        z:
          type: number
        r:
          type: number
        circle:
          type: boolean
        updated_at:
          type: string
          format: date-time
    map_area_coordinate_update:
      type: object
      properties:
        area_id:
          type: integer
        x:
          type: number
        'y':
          type: number
        z:
          type: number
        r:
          type: number
    UserCreate:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        ext_id:
          type: integer
        updated_at:
          type: string
          format: date-time
    Passphrase:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        merchant_id:
          type: integer
        passphrase:
          type: string
        store_id:
          type: integer
        store_name:
          type: string
        change_password:
          type: boolean
    Token:
      type: object
      properties:
        token:
          type: string
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo0NiwiZXhwIjoxNTgxNjA4MTAzLCJpYXQiOjE1ODE2MDA5MDN9.eZs3gHqD6BRK0n458-Vgww8fRanlUvdxriLSkqqz9zQ
    ThirdPartySignIn:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        merchant_id:
          type: integer
        passphrase:
          type: string
        store_id:
          type: integer
        store_name:
          type: string
        change_password:
          type: boolean
    ChangePassword:
      type: object
      properties:
        user_id:
          type: integer
        user_name:
          type: string
        password:
          type: string
    RetailAction:
      type: object
      properties:
        item:
          type: object
          properties:
            upc:
              type: string
            name:
              type: string
        device:
          type: object
          properties:
            identifier:
              type: string
            type:
              type: string
        user_id:
          type: integer
        action:
          type: string
    UserBasket:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              id:
                type: integer
              user_id:
                type: integer
              item_id:
                type: integer
              device_id:
                type: integer
              device_string_id:
                type: string
              state:
                type: number
              batch_info:
                type: array
                items:
                  properties:
                    BatchTime:
                      type: number
                    VibrationCount:
                      type: number
                    CloseRssiCount:
                      type: number
                    SensorDataCount:
                      type: number
              last_vibrated_time:
                type: number
              enter_basket_time:
                type: number
              exit_basket_time:
                type: number
              nearby_device_data:
                type: array
                items:
                  properties:
                    Time:
                      type: number
                    NearbyDeviceList:
                      type: array
              device_first_seen_time:
                type: integer
              nearest_beacon_id:
                type: integer
              store_id:
                type: integer
              merchant_id:
                type: integer
              product_id:
                type: integer
              in_basket_state:
                type: integer
              last_seen:
                type: integer
              active:
                type: boolean
    UserList:
      type: object
      properties:
        user_id:
          type: integer
        user_name:
          type: string
        name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        phone_number:
          type: string
        email:
          type: string
        merchant_name:
          type: string
        merchant_id:
          type: integer
        store_name:
          type: string
        store_id:
          type: integer
        permission:
          type: string
    UserName:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        user_id:
          type: integer
        source_user_id:
          type: integer
        name:
          type: string
        updated_at:
          type: string
          format: date-time
    UserEmail:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        user_id:
          type: integer
        email:
          type: string
    UserPhoneNumber:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        user_id:
          type: integer
        number:
          type: string
        updated_at:
          type: string
          format: date-time
    UserPersonalInformation:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        user_id:
          type: integer
        name:
          type: string
        middle_name:
          type: string
        last_name:
          type: string
        government_id:
          type: integer
        gender:
          type: string
    UserMerchantAssignment:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        user_id:
          type: integer
        source_user_id:
          type: integer
        merchant_id:
          type: integer
        updated_at:
          type: string
          format: date-time
    UserMerchantAssignmentInvalidation:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        user_merchant_assignment_id:
          type: integer
        source_user_id:
          type: integer
    UserStoreAssignment:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        user_id:
          type: integer
        source_user_id:
          type: integer
        merchant_store_id:
          type: integer
    Zone_:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        name:
          type: string
        store_id:
          type: integer
        type_id:
          type: integer
        updated_at:
          type: string
          format: date-time
    ZoneCoordinate:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        x:
          type: number
        'y':
          type: number
        z:
          type: number
        r:
          type: number
        circle:
          type: boolean
        store_id:
          type: integer
        updated_at:
          type: string
          format: date-time
    ZoneCoordinateList:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              zone_id:
                type: integer
              name:
                type: integer
              store_id:
                type: integer
              floor_id:
                type: integer
              type_id:
                type: integer
              Coordinates:
                items:
                  type: object
                  properties:
                    coordinate_id:
                      type: integer
                    x:
                      type: number
                    'y':
                      type: number
                    z:
                      type: number
                    r:
                      type: number
                    circle:
                      type: boolean
    ZoneArray_:
      type: object
      properties:
        items:
          properties:
            id:
              type: integer
            inserted_at:
              type: string
              format: date-time
            name:
              type: string
            store_id:
              type: integer
            type_id:
              type: integer
            updated_at:
              type: string
              format: date-time
    ZoneFloorAssignment:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        zone_id:
          type: integer
        floor_id:
          type: integer
    ZoneType:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              id:
                type: integer
              inserted_at:
                type: string
                format: date-time
              name:
                type: integer
    ZoneSession:
      type: object
      properties:
        session_id:
          type: integer
        item_name:
          type: string
        item_id:
          type: integer
        meta_data:
          type: string
          format: postgres.Jsonb
        brand_id:
          type: integer
        brand_name:
          type: integer
        session_duration:
          type: number
        zone_change_count:
          type: integer
        add_to_cart:
          type: boolean
        checkout:
          type: integer
        device_id:
          type: integer
        zone_id:
          type: integer
        zone_name:
          type: string
        inserted_at:
          type: string
          format: date-time
    ZonePerformance:
      type: object
      properties:
        least_session_zone:
          type: object
          properties:
            zone_id:
              type: integer
            zone_name:
              type: string
            counted:
              type: integer
        most_abandoned_zone:
          type: object
          properties:
            zone_id:
              type: integer
            zone_name:
              type: string
            counted:
              type: integer
        most_add_to_cart_zone:
          type: object
          properties:
            zone_id:
              type: integer
            zone_name:
              type: string
            counted:
              type: integer
        most_session_zone:
          type: object
          properties:
            zone_id:
              type: integer
            zone_name:
              type: string
            counted:
              type: integer
        zone_list:
          items:
            type: object
            properties:
              zone_id:
                type: integer
              zone_name:
                type: string
              store_name:
                type: string
              item_name:
                type: string
              session_count:
                type: integer
              add_to_cart:
                type: integer
              cart_to_detail:
                type: number
    Zone_Session:
      type: object
      properties:
        session_id:
          type: integer
        item_name:
          type: string
        item_id:
          type: integer
        meta_data:
          type: string
          format: postgres.Jsonb
        brand_id:
          type: integer
        brand_name:
          type: integer
        session_duration:
          type: number
        zone_change_count:
          type: integer
        add_to_cart:
          type: boolean
        checkout:
          type: integer
        device_id:
          type: integer
        zone_id:
          type: integer
        zone_name:
          type: string
        inserted_at:
          type: string
          format: date-time
    ZonePerformanceDetail:
      type: object
      properties:
        device_identifier:
          type: number
        item_name:
          type: string
        meta_data:
          type: string
          format: date-time
        zone_name:
          type: string
        event_started:
          type: string
          format: date-time
        event_ended:
          type: string
          format: date-time
        event_duration:
          type: number
        event_name:
          type: string
    ZoneSessionInteraction:
      type: object
      properties:
        store_name:
          type: string
        zone_name:
          type: string
        this_term_interaction_count:
          type: integer
        this_term_rank:
          type: integer
        last_term_interaction_count:
          type: integer
        last_term_rank:
          type: integer
        ranking_difference:
          type: integer
    ZoneStockRate:
      type: object
      properties:
        data:
          type: object
          properties:
            store_name:
              type: string
            store_id:
              type: integer
            stock_count:
              type: integer
            zones:
              items:
                type: object
                properties:
                  zone_id:
                    type: integer
                  zone_name:
                    type: string
                  stock_count:
                    type: integer
                  rate:
                    type: integer
    ZoneStock:
      type: object
      properties:
        item:
          type: object
          properties:
            item_name:
              type: string
            item_id:
              type: integer
            sku:
              type: string
            upc:
              type: string
            meta_data:
              type: string
              format: postgres.Jsonb
        zone_stock:
          items:
            type: object
            properties:
              zone_idid:
                type: integer
              zone_name:
                type: string
              stock_count:
                type: integer
    AB_Test_Create:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        hypothesis:
          type: string
        finished_at:
          type: string
          format: date_time
        test_type_id:
          type: string
        user_id:
          type: integer
        deleted_at:
          type: string
          format: date_time
    ABTestList:
      type: array
      items:
        $ref: '#/components/schemas/ABTestListItem'
    ABTestListItem:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        hypothesis:
          type: string
        test_type_id:
          type: string
        user_id:
          type: integer
        finished_at:
          type: string
          format: date_time
        deleted_at:
          type: string
          format: date_time
    ABTestTypes:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              id:
                type: integer
              inserted_at:
                type: string
                format: date-time
              test_type_name:
                type: integer
        total_count:
          type: integer
    ABTestType:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        test_type_name:
          type: integer
    ABTestGroupCreate:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              test_id:
                type: integer
              inserted_at:
                type: string
                format: date-time
              name:
                type: string
              entity_type_id:
                type: integer
        total_count:
          type: integer
    ABTestLocationAssignment:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              test_id:
                type: integer
              store_id:
                type: integer
        total_count:
          type: integer
    ABTestGroup:
      type: object
      properties:
        test_id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        name:
          type: string
        entity_type_id:
          type: integer
    ABTestGroupVariation:
      type: array
      items:
        properties:
          name:
            type: string
          variation_type_id:
            type: integer
          group_id:
            type: integer
          started_at:
            type: string
            format: date-time
          finished_at:
            type: string
            format: date-time
    ABTestEntity:
      type: array
      items:
        properties:
          entity_name:
            type: string
          id:
            type: integer
          inserted_at:
            type: string
            format: date-time
    ABTestTextList:
      type: array
      items:
        properties:
          text:
            type: string
          id:
            type: integer
          inserted_at:
            type: string
            format: date-time
    ABTestText:
      type: object
      properties:
        text:
          type: string
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
    ABTestVariationItemAssignment:
      type: object
      properties:
        variation_id:
          type: integer
        item_id:
          type: integer
        min_stock:
          type: integer
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
    ABTestVariationItemAssignmentList:
      type: array
      items:
        type: object
        properties:
          variation_id:
            type: integer
          item_id:
            type: integer
          min_stock:
            type: integer
          id:
            type: integer
          inserted_at:
            type: string
            format: date-time
    ABTestVariationZoneAssignment:
      type: object
      properties:
        variation_id:
          type: integer
        zone_id:
          type: integer
        min_stock:
          type: integer
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
    ABTestVariationZoneAssignmentList:
      type: array
      items:
        type: object
        properties:
          variation_id:
            type: integer
          zone_id:
            type: integer
          min_stock:
            type: integer
          id:
            type: integer
          inserted_at:
            type: string
            format: date-time
    ABTestVariationTextAssignment:
      type: object
      properties:
        variation_id:
          type: integer
        text_id:
          type: integer
        min_stock:
          type: integer
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
    ABTestVariationTextAssignmentList:
      type: array
      items:
        type: object
        properties:
          variation_id:
            type: integer
          text_id:
            type: integer
          min_stock:
            type: integer
          id:
            type: integer
          inserted_at:
            type: string
            format: date-time
    ABTestCreateLocationAssignment:
      type: object
      properties:
        test_id:
          type: integer
        store_id:
          type: integer
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
    ABTestCreateGroupVariation:
      type: object
      properties:
        name:
          type: string
        variation_type_id:
          type: integer
        group_id:
          type: integer
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
    UpdatableModel:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        name:
          type: string
        updated_at:
          type: string
          format: date_time
    DeviceVersionHistory:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        device_id:
          type: integer
        device_type_id:
          type: integer
        current_version:
          type: string
        next_version:
          type: string
        next_version_id:
          type: integer
        device_identifier:
          type: string
        next_version_url:
          type: string
    Command:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        device_type_id:
          type: integer
        command_type_id:
          type: integer
    ZonePartition:
      type: object
      properties:
        name:
          type: string
        aggregation_calculation:
          type: integer
    PlacePartition:
      type: object
      properties:
        name:
          type: string
        aggregation_calculation:
          type: integer
    BrandPartition:
      type: object
      properties:
        name:
          type: string
        aggregation_calculation:
          type: integer
    UserPartition:
      type: object
      properties:
        id:
          type: string
        aggregation_calculation:
          type: integer
    TagPartition:
      type: object
      properties:
        name:
          type: string
        aggregation_calculation:
          type: integer
    Category:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        name:
          type: string
    Device:
      type: object
      properties:
        identifier:
          type: string
        device_type_id:
          type: integer
        qr_code:
          type: string
    Device_Type:
      type: object
      properties:
        type:
          type: string
      example:
        type: Miru
    DeviceType:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        type:
          type: string
        updated_at:
          type: string
          format: date-time
    DeactivatedDevice:
      type: object
      properties:
        device_id:
          type: integer
        device_identifier:
          type: string
        item_id:
          type: integer
        store_id:
          type: integer
        last_seen:
          type: string
        activator_name:
          type: string
        deactivator_name:
          type: string
        assignment_id:
          type: integer
        invalidation_id:
          type: integer
        state_change_time:
          type: string
        activation_time:
          type: string
        deactivation_time:
          type: string
    UserDeviceInformation:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        passphrase_id:
          type: integer
        client_name:
          type: string
        device_brand:
          type: string
        device_model:
          type: string
        os_name:
          type: string
        os_platform:
          type: string
        os_version:
          type: string
        token:
          type: string
        inserted_at:
          type: string
    ShouldProcess:
      type: object
      properties:
        event_name:
          type: string
        event_id:
          type: integer
        should_process:
          type: boolean
        device_id:
          type: integer
        device_identifier:
          type: string
        user_id:
          type: integer
        zone_id:
          type: integer
        zone_name:
          type: string
        store_id:
          type: integer
        store_name:
          type: string
        item_barcode:
          type: string
    StateInfo:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        name:
          type: string
        description:
          type: string
    ScannerManagement:
      type: object
      properties:
        scanner_array:
          items:
            properties:
              id:
                type: integer
              name:
                type: string
              store_id:
                type: integer
              status:
                type: string
              last_reading_time:
                type: string
                format: date-time
        offline_scanner_count :
          type: integer
        online_scanner_count:
          type: integer
        total_scanner_count:
         type: integer
    Event:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        name:
          type: string
        description:
          type: string
    SoftwareVersion:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: integer
            inserted_at:
              type: string
              format: date-time
            description:
              type: string
            device_type_id:
              type: integer
            version:
              type: string
            version_url:
              type: string
        total_count:
          type: integer
    HardwareVersion:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: integer
            inserted_at:
              type: string
              format: date-time
            description:
              type: string
            device_type_id:
              type: integer
            version:
              type: string
            image_url:
              type: string
        total_count:
          type: integer
    HardwareSoftwareAssignment:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: integer
            inserted_at:
              type: string
            software_id:
              type: string
            hardware_id:
              type: integer
    HardwareSoftwareAssignmentList:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: integer
            inserted_at:
              type: string
            software_id:
              type: string
            hardware_id:
              type: integer
        total_count:
          type: integer
    AlarmHistory:
      type: object
      properties:
        device_id:
          type: integer
        device_identifier:
          type: string
        item_id:
          type: integer
        device_alarm_date:
          type: string
        guard_name:
          type: string
        store_name:
          type: string
        action_time:
          type: string
        action_type:
          type: string
        state_id:
          type: integer
    AssignmentCount:
      type: object
      properties:
        user_id:
          type: integer
        user_name:
          type: string
        assignment_count:
          type: integer
    VersionHistory:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        device_id:
          type: integer
        device_identifier:
          type: string
        software_version_id:
          type: integer
    ActionType:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        name:
          type: string
        description:
          type: string
        updated_at:
          type: string
          format: date-time
    MerchantDevice:
      type: object
      properties:
        assignment_id:
          type: integer
        device_id:
          type: integer
        merchant_id:
          type: integer
        identifier:
          type: string
        inserted_at:
          type: string
          format: date-time
    Store:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        merchant_id:
          type: integer
        city_id:
          type: integer
        source_user_id:
          type: integer
        store_type_id:
          type: integer
        address:
          type: string
        external_guid:
          type: integer
        external_id:
          type: integer
        external_str_id:
          type: string
        inserted_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    City:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Country:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Region:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Place:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
        city:
          type: string
        inserted_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Item:
      type: object
      properties:
        merchant_id:
          type: integer
        brand_id:
          type: integer
        name:
          type: string
        description:
          type: string
        upc:
          type: string
        sku:
          type: string
        meta_data:
          type: string
          format: postgres.Jsonb
        updated_at:
          type: string
        inserted_at:
          type: string
    ItemFilter:
      type: object
      properties:
        merchant_id:
          type: integer
        item_id:
          type: integer
        item_name:
          type: string
        brand_name:
          type: string
        meta_data:
          type: string
          format: postgres.Jsonb
    ItemAssignment:
      type: object
      properties:
        id:
          type: integer
        device_id:
          type: integer
        item_id:
          type: integer
        source_user_id:
          type: integer
    Zone:
      type: object
      properties:
        zone_id:
          type: integer
        zone_name:
          type: string
    Session_Sale_Chart:
      type: object
      properties:
        SessionCount:
          items:
            type: object
            properties:
              session_count:
                type: integer
              day:
                type: string
                format: date-time
    Product_Performance_Item:
      type: object
      properties:
        item_id:
          type: integer
        item_name:
          type: string
        upc:
          type: string
        picked_up_to_sale_rate:
          type: number
        meta_data:
          type: string
          format: postgres.Jsonb
        brand_name:
          type: string
        brand_id:
          type: integer
        average_stock:
          type: number
        sale_count:
          type: integer
        product_revenue:
          type: number
        average_product_price:
          type: number
        session_count:
          type: integer
        add_to_basket_count:
          type: integer
    ItemData:
      type: object
      properties:
        item_id:
          type: integer
        item_name:
          type: string
        sku:
          type: string
        upc:
          type: string
        meta_data:
          type: string
          format: postgres.Jsonb
        brand_name:
          type: string
    MissingItem:
      type: object
      properties:
        device_id:
          type: integer
        device_identifier:
          type: string
        last_zone_id:
          type: integer
        last_zone_name:
          type: string
        last_state_id:
          type: integer
        last_seen:
          type: string
          format: date-time
        item_id:
          type: integer
        item_name:
          type: string
        meta_data:
          type: string
          format: date-time
        brand_name:
          type: string
    MerchantInformation:
      type: object
      properties:
        merchant_id:
          type: integer
        merchant_name:
          type: string
        location_count:
          type: integer
        tag_count:
          type: integer
        user_count:
          type: integer
        item_count:
          type: integer
    StoreInformation:
      type: object
      properties:
        connected_device_count:
          items:
            type: object
            properties:
              connected_device_count:
                type: integer
        tag_count:
          items:
            type: object
            properties:
              tag_count:
                type: integer
    DailySale:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        sku:
          type: string
        store_id:
          type: string
        total_revenue:
          type: number
        sale_count:
          type: integer
    Session:
      type: object
      properties:
        item_id:
          type: integer
        average_sale_speed:
          type: string
        session_count:
          type: integer
        add_to_basket_count:
          type: integer
        meta_data:
          type: string
        brand_name:
          type: string
        brand_id:
          type: integer
        product_revenue:
          type: integer
        average_stock:
          type: integer
    SessionItem:
      type: object
      properties:
        session_count:
          type: integer
        item_id:
          type: integer
        meta_data:
          type: string
        brand_name:
          type: string
    SessionFunnel:
      type: object
      properties:
        average_sesion:
          type: number
        cart_abandonment_count:
          type: integer
        meta_data:
          type: string
          format: postgres.Jsonb
        no_cart_addition_count:
          type: number
        no_cart_addition_to_sessions_with_add_to_cart_count:
          type: number
        picked_up_to_add_to_basket_rate:
          type: number
        sessions_with_add_to_cart_count:
          type: number
        sessions_with_product_count:
          type: number
        sessions_with_product_to_no_cart_addition_count:
          type: number
    SessionFunnelTerm:
      type: object
      properties:
        last_term:
          type: object
          properties:
            average_sesion:
              type: number
            cart_abandonment_count:
              type: integer
            meta_data:
              type: string
              format: postgres.Jsonb
            no_cart_addition_count:
              type: number
            no_cart_addition_to_sessions_with_add_to_cart_count:
              type: number
            picked_up_to_add_to_basket_rate:
              type: number
            sessions_with_add_to_cart_count:
              type: number
            sessions_with_product_count:
              type: number
            sessions_with_product_to_no_cart_addition_count:
              type: number
        term:
          type: object
          properties:
            average_sesion:
              type: number
            cart_abandonment_count:
              type: integer
            meta_data:
              type: string
              format: postgres.Jsonb
            no_cart_addition_count:
              type: number
            no_cart_addition_to_sessions_with_add_to_cart_count:
              type: number
            picked_up_to_add_to_basket_rate:
              type: number
            sessions_with_add_to_cart_count:
              type: number
            sessions_with_product_count:
              type: number
            sessions_with_product_to_no_cart_addition_count:
              type: number
    SessionDaily:
      type: object
      properties:
        previous_session_count_average:
          type: number
        rate:
          type: number
        session_count_average:
          type: number
        session_daily_array:
          type: array
          items:
            properties:
              session_count:
                type: number
              day:
                type: string
                format: date-time
    SessionAddToCartDaily:
      type: object
      properties:
        add_to_cart_count_average:
          type: number
        add_to_cart_daily_array:
          type: array
          items:
            properties:
              add_to_cart_count:
                type: integer
              day:
                type: string
                format: date-time
    SessionAverageBasketTimeDaily:
      type: object
      properties:
        average_basket_time_average:
          type: number
        average_basket_time_daily_array:
          type: array
          items:
            properties:
              session_duration:
                type: number
              day:
                type: string
                format: date-time
    AlarmCountDaily:
      type: object
      properties:
        alarm_count_average:
          type: number
        alarm_count_daily_array:
          type: array
          items:
            properties:
              alarm_count:
                type: number
              day:
                type: string
                format: date-time
    SessionList:
      type: object
      properties:
        session_id:
          type: integer
        item_name:
          type: string
        item_id:
          type: integer
        meta_data:
          type: string
          format: postgres.Jsonb
        brand_id:
          type: integer
        brand_name:
          type: string
        session_duration:
          type: number
        zone_change_count:
          type: integer
        add_to_cart_count:
          type: integer
        checkout:
          type: integer
        device_id:
          type: integer
        zone_id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        identifier:
          type: string
    DailyReport:
      type: object
      properties:
        data:
          type: object
          properties:
            add_to_cart_rate:
              type: number
            abandon_rate:
              type: number
    AverageResponse:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              duration:
                type: string
              store_id:
                type: integer
              store_name:
                type: string
              alarm_count:
                type: integer
              rank:
                type: integer
        total_count:
          type: integer
    StockQuality:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              date:
                type: string
              aggregation_calculation:
                type: integer
        total_count:
          type: integer
    DeviceStatus:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              state_id:
                type: integer
              state_count:
                type: integer
              state_name:
                type: string
        total_count:
          type: integer
    MostInteractionItem:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              interaction_count:
                type: integer
              item_id:
                type: integer
              item_name:
                type: string
              meta_data:
                type: string
              brand_name:
                type: string
        total_count:
          type: integer
    DailyStoreReport:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              add_to_cart_rate:
                type: number
              abandon_rate:
                type: number
              store_name:
                type: string
              store_id:
                type: integer
              picked_up:
                type: integer
              add_to_basket:
                type: number
        total_count:
          type: integer
    Sale:
      type: object
      properties:
        sale_count:
          type: integer
        brand_name:
          type: string
        brand_id:
          type: integer
        item_id:
          type: integer
    InterestToBasket:
      type: object
      properties:
        totalInteraction:
          type: integer
        totalWalking:
          type: integer
    AlarmedHour:
      type: object
      properties:
        hour:
          type: string
        weekday:
          type: integer
        alarm_count:
          type: integer
    AlarmedItem:
      type: object
      properties:
        alarm_count:
          type: integer
        item_id:
          type: integer
        meta_data:
          type: string
    AlarmedDevice:
      type: object
      properties:
        alarm_count:
          type: integer
        device_identifier:
          type: string
        device_id:
          type: integer
    AlarmedZone:
      type: object
      properties:
        zone_name:
          type: string
        zone_id:
          type: integer
        alarm_count:
          type: integer
    AlarmRate:
      type: object
      properties:
        day:
          type: integer
        alarm_count:
          type: number
    CalibrationValue:
      type: object
      properties:
        item_id:
          type: integer
        calibration_value:
          type: integer
    DeviceMonitoring:
      type: object
      properties:
        device_id:
          type: integer
        device_identifier:
          type: string
        item_id:
          type: integer
        item_name:
          type: string
        last_seen:
          type: string
        activator_name:
          type: string
        state_id:
          type: integer
        deactivator_name:
          type: string
        assignment_id:
          type: integer
        activator_user_id:
          type: integer
        invalidation_id:
          type: integer
        state_change_time:
          type: string
        zone_id:
          type: integer
        zone:
          type: string
        activation_time:
          type: string
        deactivation_time:
          type: string
        meta_data:
          type: string
    DeviceCoordinate:
      type: object
      properties:
        id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        device_id:
          type: integer
        floor_id:
          type: integer
        x:
          type: number
        'y':
          type: number
        updated_at:
          type: string
          format: date-time
    DeviceCoordinateList:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              id:
                type: integer
              inserted_at:
                type: string
                format: date-time
              identifier:
                type: string
              x:
                type: number
              'y':
                type: number
              floor_id:
                type: integer
    StoreDevice:
      type: object
      properties:
        device_array:
          items:
            type: object
            properties:
              merchant_assignment_id:
                type: integer
              device_id:
                type: integer
              merchant_id:
                type: integer
              identifier:
                type: string
              device_inserted_at:
                type: string
                format: date-time
              store_id:
                type: integer
              assignment_id:
                type: integer
              store_name:
                type: string
              store_type:
                type: string
              stpre_inserted_at:
                type: string
                format: date-time
    InteractionHour:
      type: object
      properties:
        hour:
          type: string
        weekday:
          type: string
        interaction_count:
          type: integer
    InteractionEventItem:
      type: object
      properties:
        name:
          type: string
        upc:
          type: string
        meta_data:
          type: object
        aggregatrion_calculation:
          type: integer
    ExperimentationAddToCart:
      type: object
      properties:
        test_id:
          type: integer
        upc:
          type: string
        meta_data:
          type: object
        aggregatrion_calculation:
          type: integer
    Interaction_Response_200_Item:
      type: object
      properties:
        data:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/InteractionEventItem'
            total_aggregation_calculation:
              type: integer
    ExperimentationDailyResultSale:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              variation_id:
                type: integer
              variation_name:
                type: integer
              daily_sales:
                items:
                  type: object
                  properties:
                    sales:
                      type: integer
                    day:
                      type: string
                      format: date-time
    ExperimentationDailyResultAverageStock:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              variation_id:
                type: integer
              variation_name:
                type: integer
              daily_sales:
                items:
                  type: object
                  properties:
                    avg_stock:
                      type: integer
                    day:
                      type: string
                      format: date-time
    ExperimentationDailyResultPickedUpToWalking:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              variation_id:
                type: integer
              variation_name:
                type: integer
              daily_picked_up_to_walking:
                items:
                  type: object
                  properties:
                    picked_up_to_walking:
                      type: integer
                    day:
                      type: string
                      format: date-time
    ExperimentationDailyResultPickedUpToSales:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              variation_id:
                type: integer
              variation_name:
                type: integer
              daily_picked_up_to_sales:
                items:
                  type: object
                  properties:
                    picked_up_to_sales:
                      type: integer
                    day:
                      type: string
                      format: date-time
    ExperimentationDailyResultPickedUp:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              variation_id:
                type: integer
              variation_name:
                type: integer
              daily_session:
                items:
                  type: object
                  properties:
                    picked_up:
                      type: integer
                    walking:
                      type: integer
                    day:
                      type: string
                      format: date-time
    Experimentation_Store_Result:
      type: object
      properties:
        data:
          type: object
          properties:
            variation:
              type: array
              items:
                properties:
                  variation_type:
                    type: string
                  variation_id:
                    type: integer
                  stock_avail:
                    type: number
                  avg_stock:
                    type: number
                  min_stock:
                    type: number
                  picked_up:
                    type: integer
                  walking:
                    type: integer
                  abandon:
                    type: integer
                  sale:
                    type: integer
                  conversion:
                    type: number
                  improvement:
                    type: number
                  control_picked_up_comparison:
                    type: number
                  control_abandon_comparison:
                    type: number
                  'control_walking_comparison,':
                    type: number
                  control_conversion_comparison:
                    type: number
                  control_improvement_comparison:
                    type: number
                  'control_variation_name,':
                    type: number
                  store_array:
                    type: array
                    items:
                      properties:
                        variation_type:
                          type: string
                        variation_id:
                          type: integer
                        variation_name:
                          type: string
                        store_id:
                          type: integer
                        store_name:
                          type: string
                        stock_avail:
                          type: number
                        avg_stock:
                          type: number
                        min_stock:
                          type: number
                        sale:
                          type: number
                        walking:
                          type: number
                        abandon:
                          type: number
                        conversion:
                          type: number
                        improvement:
                          type: number
                        control_picked_up_comparison:
                          type: number
                        control_abandon_comparison:
                          type: number
                        control_walking_comparison:
                          type: number
                        control_conversion_comparison:
                          type: number
                        control_improvement_comparison:
                          type: number
                        control_variation_name:
                          type: string
    Experimentation_Store_Result_Add_To_Cart:
      type: object
      properties:
        data:
          type: object
          properties:
            variation:
              type: array
              items:
                properties:
                  variation_type:
                    type: string
                  variation_id:
                    type: integer
                  variation_name:
                    type: string
                  stock_avail:
                    type: number
                  avg_stock:
                    type: number
                  min_stock:
                    type: number
                  picked_up:
                    type: integer
                  walking:
                    type: integer
                  abandon:
                    type: integer
                  picked_up_to_walking:
                    type: integer
                  improvement:
                    type: number
                  control_picked_up_comparison:
                    type: number
                  control_abandon_comparison:
                    type: number
                  'control_walking_comparison,':
                    type: number
                  control_conversion_comparison:
                    type: number
                  control_improvement_comparison:
                    type: number
                  'control_variation_name,':
                    type: number
                  store_array:
                    type: array
                    items:
                      properties:
                        variation_type:
                          type: string
                        variation_id:
                          type: integer
                        variation_name:
                          type: string
                        store_id:
                          type: integer
                        store_name:
                          type: string
                        stock_avail:
                          type: number
                        avg_stock:
                          type: number
                        min_stock:
                          type: number
                        picked_up:
                          type: number
                        walking:
                          type: number
                        abandon:
                          type: number
                        picked_up_to_walking:
                          type: number
                        improvement:
                          type: number
                        control_picked_up_comparison:
                          type: number
                        control_abandon_comparison:
                          type: number
                        control_walking_comparison:
                          type: number
                        control_conversion_comparison:
                          type: number
                        control_improvement_comparison:
                          type: number
                        control_variation_name:
                          type: string
    Experimentation_Item_Result:
      type: object
      properties:
        data:
          type: object
          properties:
            variation:
              type: array
              items:
                properties:
                  variation_type:
                    type: string
                  variation_id:
                    type: integer
                  stock_avail:
                    type: number
                  avg_stock:
                    type: number
                  min_stock:
                    type: number
                  picked_up:
                    type: integer
                  walking:
                    type: integer
                  abandon:
                    type: integer
                  sale:
                    type: integer
                  conversion:
                    type: number
                  improvement:
                    type: number
                  control_picked_up_comparison:
                    type: number
                  control_abandon_comparison:
                    type: number
                  'control_walking_comparison,':
                    type: number
                  control_conversion_comparison:
                    type: number
                  control_improvement_comparison:
                    type: number
                  'control_variation_name,':
                    type: number
                  item_array:
                    type: array
                    items:
                      properties:
                        variation_type:
                          type: string
                        variation_id:
                          type: integer
                        variation_name:
                          type: string
                        item_id:
                          type: integer
                        item_name:
                          type: string
                        stock_avail:
                          type: number
                        avg_stock:
                          type: number
                        min_stock:
                          type: number
                        sale:
                          type: number
                        walking:
                          type: number
                        abandon:
                          type: number
                        conversion:
                          type: number
                        improvement:
                          type: number
                        control_picked_up_comparison:
                          type: number
                        control_abandon_comparison:
                          type: number
                        control_walking_comparison:
                          type: number
                        control_conversion_comparison:
                          type: number
                        control_improvement_comparison:
                          type: number
                        control_variation_name:
                          type: string
    Experimentation_Item_Result_Add_To_Cart:
      type: object
      properties:
        data:
          type: object
          properties:
            variation:
              type: array
              items:
                properties:
                  variation_type:
                    type: string
                  variation_id:
                    type: integer
                  variation_name:
                    type: string
                  stock_avail:
                    type: number
                  avg_stock:
                    type: number
                  min_stock:
                    type: number
                  picked_up:
                    type: integer
                  walking:
                    type: integer
                  abandon:
                    type: integer
                  picked_up_to_walking:
                    type: integer
                  improvement:
                    type: number
                  control_picked_up_comparison:
                    type: number
                  control_abandon_comparison:
                    type: number
                  'control_walking_comparison,':
                    type: number
                  control_conversion_comparison:
                    type: number
                  control_improvement_comparison:
                    type: number
                  'control_variation_name,':
                    type: number
                  store_array:
                    type: array
                    items:
                      properties:
                        variation_type:
                          type: string
                        variation_id:
                          type: integer
                        variation_name:
                          type: string
                        item_id:
                          type: integer
                        item_name:
                          type: string
                        stock_avail:
                          type: number
                        avg_stock:
                          type: number
                        min_stock:
                          type: number
                        picked_up:
                          type: number
                        walking:
                          type: number
                        abandon:
                          type: number
                        picked_up_to_walking:
                          type: number
                        improvement:
                          type: number
                        control_picked_up_comparison:
                          type: number
                        control_abandon_comparison:
                          type: number
                        control_walking_comparison:
                          type: number
                        control_conversion_comparison:
                          type: number
                        control_improvement_comparison:
                          type: number
                        control_variation_name:
                          type: string
    Experimentation_Information:
      type: object
      properties:
        test_id:
          type: integer
        hypothesis:
          type: string
        day:
          type: number
        active:
          type: boolean
        test_type_id:
          type: integer
        entity_type_id:
          type: integer
        user_id:
          type: integer
        inserted_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        Group:
          type: array
          items:
            properties:
              group_id:
                type: integer
              group_name:
                type: string
              Variation:
                type: array
                items:
                  properties:
                    variation_id:
                      type: integer
                    variation_name:
                      type: string
                    started_at:
                      type: string
                      format: date-time
                    finished_at:
                      type: string
                      format: date-time
    CategoryPartition:
      type: object
      properties:
        name:
          type: string
        aggregation_calculation:
          type: integer
    RetailResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            actions:
              items:
                $ref: '#/components/schemas/RetailAction'
            total_aggregation_calculation:
              type: integer
    TagResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            tags:
              items:
                $ref: '#/components/schemas/TagPartition'
            total_aggregation_calculation:
              type: integer
    PlaceResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            places:
              items:
                $ref: '#/components/schemas/PlacePartition'
            total_aggregation_calculation:
              type: integer
    ZoneResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            zones:
              items:
                $ref: '#/components/schemas/ZonePartition'
            total_aggregation_calculation:
              type: integer
    Insight:
      type: object
      properties:
        name:
          type: string
        upc:
          type: string
        meta_data:
          type: object
          properties:
            image_url:
              type: string
        event:
          type: string
    InsightResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            items:
              items:
                $ref: '#/components/schemas/Insight'
            total_aggregation_calculation:
              type: integer
    CategoryResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            categories:
              items:
                $ref: '#/components/schemas/CategoryPartition'
            total_aggregation_calculation:
              type: integer
    Interaction:
      type: object
      properties:
        upc:
          type: string
        name:
          type: string
        meta_data:
          type: object
          properties:
            image_url:
              type: string
        rank:
          type: integer
        interaction_event:
          type: string
    InteractionResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            items:
              items:
                $ref: '#/components/schemas/Interaction'
            total_aggregation_calculation:
              type: integer
    Stock:
      type: object
      properties:
        item:
          type: object
          properties:
            upc:
              type: string
            name:
              type: string
            aggregation_calculation:
              type: integer
    ItemResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            stocks:
              items:
                $ref: '#/components/schemas/Stock'
            total_aggregation_calculation:
              type: integer
    Security:
      type: object
      properties:
        item:
          type: object
          properties:
            upc:
              type: string
            name:
              type: string
        device:
          type: object
          properties:
            identifier:
              type: string
            type:
              type: string
        user_id:
          type: integer
        event:
          type: string
    SecurityResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            security_events:
              items:
                $ref: '#/components/schemas/Security'
            total_aggregation_calculation:
              type: integer
    UserResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            users:
              items:
                $ref: '#/components/schemas/UserPartition'
            total_aggregation_calculation:
              type: integer
    BrandResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            brands:
              items:
                $ref: '#/components/schemas/BrandPartition'
            total_aggregation_calculation:
              type: integer
    HardwareStatusResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            stasuses:
              items:
                $ref: '#/components/schemas/Hardware'
            total_aggregation_calculation:
              type: integer
    Most_Alarmed_Hour:
      type: object
      properties:
        '0':
          type: array
          items:
            $ref: '#/components/schemas/AlarmedHour'
        '1':
          type: array
          items:
            $ref: '#/components/schemas/AlarmedHour'
        '2':
          type: array
          items:
            $ref: '#/components/schemas/AlarmedHour'
        '3':
          type: array
          items:
            $ref: '#/components/schemas/AlarmedHour'
        '4':
          type: array
          items:
            $ref: '#/components/schemas/AlarmedHour'
        '5':
          type: array
          items:
            $ref: '#/components/schemas/AlarmedHour'
        '6':
          type: array
          items:
            $ref: '#/components/schemas/AlarmedHour'
    Most_Interaction_Hour:
      type: object
      properties:
        '0':
          type: array
          items:
            $ref: '#/components/schemas/InteractionHour'
        '1':
          type: array
          items:
            $ref: '#/components/schemas/InteractionHour'
        '2':
          type: array
          items:
            $ref: '#/components/schemas/InteractionHour'
        '3':
          type: array
          items:
            $ref: '#/components/schemas/InteractionHour'
        '4':
          type: array
          items:
            $ref: '#/components/schemas/InteractionHour'
        '5':
          type: array
          items:
            $ref: '#/components/schemas/InteractionHour'
        '6':
          type: array
          items:
            $ref: '#/components/schemas/InteractionHour'
    inline_response_200_6:
      type: object
      properties:
        calibrationValueArray:
          type: array
          items:
            $ref: '#/components/schemas/CalibrationValue'
        deviceMonitoringArray:
          type: array
          items:
            $ref: '#/components/schemas/DeviceMonitoring'
    inline_response_200_7:
      type: object
      properties:
        device_id:
          type: string
      example:
        device_id: 01000A010
    Map:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: integer
            inserted_at:
              type: string
              format: date-time
            store_id:
              type: integer
            name:
              type: string
            base_ratio:
              type: number
            grid:
              type: number
    MapwithMerchantName:
      type: object
      properties:
        data:
          type: object
          properties:
            inserted_at:
              type: string
              format: date-time
            store_id:
              type: integer
            name:
              type: string
            base_ratio:
              type: number
            grid:
              type: number
            merchant_name:
              type: string
    MapList:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              id:
                type: integer
              inserted_at:
                type: string
                format: date-time
              store_id:
                type: integer
              name:
                type: string
              base_ratio:
                type: number
              grid:
                type: number
              area_count:
                type: integer
              zone_count:
                type: integer
              scanner_count:
                type: integer
              floor_count:
                type: integer
        total_count:
          type: integer
    MapFloorList:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              id:
                type: integer
              inserted_at:
                type: string
                format: date-time
              store_id:
                type: integer
              name:
                type: string
              floor_plan:
                type: string
              floor:
                type: integer
              base_ratio:
                type: number
              grid:
                type: number
              area_count:
                type: integer
              zone_count:
                type: integer
              scanner_count:
                type: integer
              floor_count:
                type: integer
        total_count:
          type: integer
    MapArea:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              id:
                type: integer
              inserted_at:
                type: string
                format: date-time
              name:
                type: string
              floor_id:
                type: integer
    MapAreaCoordinate:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              id:
                type: integer
              inserted_at:
                type: string
                format: date-time
              area_id:
                type: integer
              x:
                type: number
              'y':
                type: number
              z:
                type: number
              r:
                type: number
              circle:
                type: boolean
              updated_at:
                type: string
                format: date-time
    Hardware:
      type: object
      properties:
        device:
          type: object
          properties:
            identifier:
              type: string
            type:
              type: string
            status:
              type: string
    MapAreaCoordinateList:
      type: object
      properties:
        data:
          items:
            type: object
            properties:
              id:
                type: integer
              store_id:
                type: integer
              name:
                type: string
              base_ratio:
                type: number
              grid:
                type: number
              Floor:
                items:
                  type: object
                  properties:
                    floor_plan:
                      type: string
                    floor:
                      type: integer
                    Areas:
                      items:
                        type: object
                        properties:
                          area_id:
                            type: integer
                          area_name:
                            type: string
                          Coordinates:
                            items:
                              type: object
                              properties:
                                coordinate_id:
                                  type: integer
                                x:
                                  type: number
                                'y':
                                  type: number
                                z:
                                  type: number
                                r:
                                  type: number
                                circle:
                                  type: boolean
  parameters:
    Limit:
      in: query
      name: limit
      description: Specify the number of records to return.
      schema:
        type: integer
    Sort:
      in: query
      name: sort
      schema:
        type: string
        enum:
          - asc
          - desc
      description: |
        Sort order:
            * `asc` - Ascending, from A to Z
            * `desc` - Descending, from Z to A
    InsightType:
      in: query
      name: event_type
      description: |
        Insight type:
            * `conversion` - picked up's divided by sales
            * `cart_sale` - added to cart divided by sales
            * `cart_rate` - picked up's divided by add to cart's
            * `stock_out` - Stock out rate calculation
            * `interaction_rate` - Time interacted with items
            * `stock_out_response` - Reaction time of employees to stock out
            * `alarm_response` - Reaction time of employees to alarms
      schema:
        type: string
        enum:
          - conversion
          - cart_sale
          - cart_rate
          - stock_out
          - interaction_rate
          - stock_out_response
          - alarm_response
    AggregationFunction:
      in: query
      name: aggregation_function
      description: The types of aggregate functions you want to use on the result you are fetching. For example passing in sum would bring you the total value of the resource you want to fetch.
      schema:
        type: string
        enum:
          - sum
          - count
          - min
          - max
          - average
          - median
    RetailEvent:
      in: query
      name: event_type
      description: The types of item retail event calculations you want to fetch.
      schema:
        type: string
        enum:
          - silence_alarm
          - pair_item
          - unpair_item
          - find
          - set
          - transfer
          - assign
          - ring
    InteractionEvent:
      in: query
      name: event_type
      description: The types of user item engagements you want to fetch.
      schema:
        type: string
        enum:
          - picked_up
          - bounce
          - browsing
          - walking
          - abandoned
    ItemBarcode:
      in: query
      name: item_barcode
      description: Specify the barcode of items to fetch.
      schema:
        type: string
    StartDate:
      in: query
      name: start_date
      description: The start date of the time frame you want to search your values inbtween.
      schema:
        type: string
      required: false
    StockEvent:
      in: query
      name: event_type
      description: The types of item stock events you want to fetch.
      schema:
        type: string
        enum:
          - stock
          - stock_out
          - min_stock
    HardwareEvent:
      in: query
      name: hardware_type
      description: The types of hardware you want to fetch.
      schema:
        type: string
        enum:
          - tag
          - scanner
    HardwareStatusEvent:
      in: query
      name: hardware_status
      description: The types of hardware states you want to fetch.
      schema:
        type: string
        enum:
          - in_production
          - ready_to_use
          - ready_to_assign
          - assigned
          - in_use
          - maintenance
          - low_battery
          - end_of_life
    EndDate:
      in: query
      name: end_date
      description: The end date of the time frame you want to search your values inbetween.
      schema:
        type: string
      required: false
    PlaceID:
      in: query
      name: place_id
      description: The place id's of place objects to customize your query
      schema:
        type: array
        items:
          type: integer
      required: false
    CategoryID:
      in: query
      name: category_id
      description: The category id's of item objects to customize your query
      schema:
        type: array
        items:
          type: integer
      required: false
    TagID:
      in: query
      name: tag_id
      description: The tag id's of tag objects to customize your query
      schema:
        type: array
        items:
          type: integer
      required: false
    SecurityEvent:
      in: query
      name: event_type
      description: The types of item security events you want to fetch.
      schema:
        type: string
        enum:
          - active
          - deactive
          - alarming
          - alarmed
          - missing
    ItemID:
      in: query
      name: item_id
      description: The item id's of the item objects to customize your query
      schema:
        type: array
        items:
          type: integer
      required: false
    StoreID:
      in: query
      name: store_id
      schema:
        type: array
        items:
          type: integer
      required: false
    ZoneID:
      in: query
      name: zone_id
      description: The zone id's of zone objects to customize your query
      schema:
        type: array
        items:
          type: integer
      required: false
    BrandID:
      in: query
      name: brand_id
      description: The brand id's of brand objects to customize your query
      schema:
        type: array
        items:
          type: integer
      required: false
    UserID:
      in: query
      name: user_id
      description: The user id's of the user objects to customize your query
      schema:
        type: array
        items:
          type: integer
      required: false
    GroupBy:
      in: query
      name: group_by
      schema:
        type: string
        enum:
          - zone
          - item
          - brand
          - category
          - place
          - user
          - tag
